Name,Possible Value,Increment,Unit,Range,Read Only,Title,Description,,,,,,
ACRO_BAL_PITCH,1,,,0 3,FALSE,aaa aaa,rate at which pitch angle returns to level in acro mode. A higher value causes the vehicle to return to level faster.,1,1,MAV_PARAM_UNIT.UNKNOWN,"0,3",true,"ACRO_BAL_PITCH(1,1,MAV_PARAM_UNIT.UNKNOWN,0,3,true,""aaa aaa"",""rate at which pitch angle returns to level in acro mode. A higher value causes the vehicle to return to level faster.""),"
ACRO_BAL_ROLL,1,,,0 3,FALSE,,rate at which roll angle returns to level in acro mode. A higher value causes the vehicle to return to level faster.,1,1,MAV_PARAM_UNIT.UNKNOWN,"0,3",true,"ACRO_BAL_ROLL(1,1,MAV_PARAM_UNIT.UNKNOWN,0,3,true,"""",""rate at which roll angle returns to level in acro mode. A higher value causes the vehicle to return to level faster.""),"
ACRO_EXPO,0.3,,,,FALSE,,Coming soon,0.3,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"ACRO_EXPO(0.3,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
ACRO_RP_P,4.5,,I43475,,FALSE,,Converts pilot roll and pitch into a desired rate of rotation in ACRO and SPORT mode. Higher values mean faster rate of rotation.,4.5,1,MAV_PARAM_UNIT.I43475,null,true,"ACRO_RP_P(4.5,1,MAV_PARAM_UNIT.I43475,null,true,"""",""Converts pilot roll and pitch into a desired rate of rotation in ACRO and SPORT mode. Higher values mean faster rate of rotation.""),"
ACRO_TRAINER,2,,List,0:Disabled 1:Leveling 2:LevelingAndLimited,FALSE,,,2,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Leveling"");put(2,""LevelingAndLimited"");}};",true,"ACRO_TRAINER(2,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Leveling"");put(2,""LevelingAndLimited"");}};,true,"""",""""),"
ACRO_YAW_P,4.5,,I43475,,FALSE,,"Converts pilot yaw input into a desired rate of rotation in ACRO, Stabilize and SPORT modes. Higher values mean faster rate of rotation.",4.5,1,MAV_PARAM_UNIT.I43475,null,true,"ACRO_YAW_P(4.5,1,MAV_PARAM_UNIT.I43475,null,true,"""",""Converts pilot yaw input into a desired rate of rotation in ACRO, Stabilize and SPORT modes. Higher values mean faster rate of rotation.""),"
AHRS_COMP_BETA,0.1,,,0.001 0.5,FALSE,,This controls the time constant for the cross-over frequency used to fuse AHRS (airspeed and heading) and GPS data to estimate ground velocity. Time constant is 0.1/beta. A larger time constant will use GPS data less and a small time constant will use air data less.,0.1,1,MAV_PARAM_UNIT.UNKNOWN,"0.001,0.5",true,"AHRS_COMP_BETA(0.1,1,MAV_PARAM_UNIT.UNKNOWN,0.001,0.5,true,"""",""This controls the time constant for the cross-over frequency used to fuse AHRS (airspeed and heading) and GPS data to estimate ground velocity. Time constant is 0.1/beta. A larger time constant will use GPS data less and a small time constant will use air data less.""),"
AHRS_GPS_GAIN,1,,,0.0 1.0,FALSE,,This controls how how much to use the GPS to correct the attitude. This should never be set to zero for a plane as it would result in the plane losing control in turns. For a plane please use the default value of 1.0.,1,1,MAV_PARAM_UNIT.UNKNOWN,"0.0,1.0",true,"AHRS_GPS_GAIN(1,1,MAV_PARAM_UNIT.UNKNOWN,0.0,1.0,true,"""",""This controls how how much to use the GPS to correct the attitude. This should never be set to zero for a plane as it would result in the plane losing control in turns. For a plane please use the default value of 1.0.""),"
AHRS_GPS_MINSATS,6,,,0 10,FALSE,,"Minimum number of satellites visible to use GPS for velocity based corrections attitude correction. This defaults to 6, which is about the point at which the velocity numbers from a GPS become too unreliable for accurate correction of the accelerometers.",6,1,MAV_PARAM_UNIT.UNKNOWN,"0,10",true,"AHRS_GPS_MINSATS(6,1,MAV_PARAM_UNIT.UNKNOWN,0,10,true,"""",""Minimum number of satellites visible to use GPS for velocity based corrections attitude correction. This defaults to 6, which is about the point at which the velocity numbers from a GPS become too unreliable for accurate correction of the accelerometers.""),"
AHRS_GPS_USE,1,,List,0:Disabled 1:Enabled,FALSE,,,1,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};",true,"AHRS_GPS_USE(1,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};,true,"""",""""),"
AHRS_ORIENTATION,0,,List,0:None 1:Yaw45 2:Yaw90 3:Yaw135 4:Yaw180 5:Yaw225 6:Yaw270 7:Yaw315 8:Roll180 9:Roll180Yaw45 10:Roll180Yaw90 11:Roll180Yaw135 12:Pitch180 13:Roll180Yaw225 14:Roll180Yaw270 15:Roll180Yaw315 16:Roll90 17:Roll90Yaw45 18:Roll90Yaw90 19:Roll90Yaw135 20:Roll270 21:Roll270Yaw45 22:Roll270Yaw90 23:Roll270Yaw136 24:Pitch90 25:Pitch270 26:Pitch180Yaw90 27:Pitch180Yaw270 28:Roll90Pitch90 29:Roll180Pitch90 30:Roll270Pitch90 31:Roll90Pitch180 32:Roll270Pitch180 33:Roll90Pitch270 34:Roll180Pitch270 35:Roll270Pitch270 36:Roll90Pitch180Yaw90 37:Roll90Yaw270,FALSE,,,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""None"");put(1,""Yaw45"");put(2,""Yaw90"");put(3,""Yaw135"");put(4,""Yaw180"");put(5,""Yaw225"");put(6,""Yaw270"");put(7,""Yaw315"");put(8,""Roll180"");put(9,""Roll180Yaw45"");put(10,""Roll180Yaw90"");put(11,""Roll180Yaw135"");put(12,""Pitch180"");put(13,""Roll180Yaw225"");put(14,""Roll180Yaw270"");put(15,""Roll180Yaw315"");put(16,""Roll90"");put(17,""Roll90Yaw45"");put(18,""Roll90Yaw90"");put(19,""Roll90Yaw135"");put(20,""Roll270"");put(21,""Roll270Yaw45"");put(22,""Roll270Yaw90"");put(23,""Roll270Yaw136"");put(24,""Pitch90"");put(25,""Pitch270"");put(26,""Pitch180Yaw90"");put(27,""Pitch180Yaw270"");put(28,""Roll90Pitch90"");put(29,""Roll180Pitch90"");put(30,""Roll270Pitch90"");put(31,""Roll90Pitch180"");put(32,""Roll270Pitch180"");put(33,""Roll90Pitch270"");put(34,""Roll180Pitch270"");put(35,""Roll270Pitch270"");put(36,""Roll90Pitch180Yaw90"");put(37,""Roll90Yaw270"");}};",true,"AHRS_ORIENTATION(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""None"");put(1,""Yaw45"");put(2,""Yaw90"");put(3,""Yaw135"");put(4,""Yaw180"");put(5,""Yaw225"");put(6,""Yaw270"");put(7,""Yaw315"");put(8,""Roll180"");put(9,""Roll180Yaw45"");put(10,""Roll180Yaw90"");put(11,""Roll180Yaw135"");put(12,""Pitch180"");put(13,""Roll180Yaw225"");put(14,""Roll180Yaw270"");put(15,""Roll180Yaw315"");put(16,""Roll90"");put(17,""Roll90Yaw45"");put(18,""Roll90Yaw90"");put(19,""Roll90Yaw135"");put(20,""Roll270"");put(21,""Roll270Yaw45"");put(22,""Roll270Yaw90"");put(23,""Roll270Yaw136"");put(24,""Pitch90"");put(25,""Pitch270"");put(26,""Pitch180Yaw90"");put(27,""Pitch180Yaw270"");put(28,""Roll90Pitch90"");put(29,""Roll180Pitch90"");put(30,""Roll270Pitch90"");put(31,""Roll90Pitch180"");put(32,""Roll270Pitch180"");put(33,""Roll90Pitch270"");put(34,""Roll180Pitch270"");put(35,""Roll270Pitch270"");put(36,""Roll90Pitch180Yaw90"");put(37,""Roll90Yaw270"");}};,true,"""",""""),"
AHRS_RP_P,0.1,,,0.1 0.4,FALSE,,This controls how fast the accelerometers correct the attitude,0.1,1,MAV_PARAM_UNIT.UNKNOWN,"0.1,0.4",true,"AHRS_RP_P(0.1,1,MAV_PARAM_UNIT.UNKNOWN,0.1,0.4,true,"""",""This controls how fast the accelerometers correct the attitude""),"
AHRS_TRIM_X,0.0004882812,,Radians,-0.1745 0.1745,FALSE,,Compensates for the roll angle difference between the control board and the frame. Positive values make the vehicle roll right.,0.0004882812,1,MAV_PARAM_UNIT.Radians,"-0.1745,0.1745",true,"AHRS_TRIM_X(0.0004882812,1,MAV_PARAM_UNIT.Radians,-0.1745,0.1745,true,"""",""Compensates for the roll angle difference between the control board and the frame. Positive values make the vehicle roll right.""),"
AHRS_TRIM_Y,0.02518386,,Radians,-0.1745 0.1745,FALSE,,Compensates for the pitch angle difference between the control board and the frame. Positive values make the vehicle pitch up/back.,0.02518386,1,MAV_PARAM_UNIT.Radians,"-0.1745,0.1745",true,"AHRS_TRIM_Y(0.02518386,1,MAV_PARAM_UNIT.Radians,-0.1745,0.1745,true,"""",""Compensates for the pitch angle difference between the control board and the frame. Positive values make the vehicle pitch up/back.""),"
AHRS_TRIM_Z,0,,Radians,-0.1745 0.1745,FALSE,,Not Used,0,1,MAV_PARAM_UNIT.Radians,"-0.1745,0.1745",true,"AHRS_TRIM_Z(0,1,MAV_PARAM_UNIT.Radians,-0.1745,0.1745,true,"""",""Not Used""),"
AHRS_WIND_MAX,0,,m/s,0 127,FALSE,,This sets the maximum allowable difference between ground speed and airspeed. This allows the plane to cope with a failing airspeed sensor. A value of zero means to use the airspeed as is.,0,1,MAV_PARAM_UNIT.m_s,"0,127",true,"AHRS_WIND_MAX(0,1,MAV_PARAM_UNIT.m_s,0,127,true,"""",""This sets the maximum allowable difference between ground speed and airspeed. This allows the plane to cope with a failing airspeed sensor. A value of zero means to use the airspeed as is.""),"
AHRS_YAW_P,0.1,,,0.1 0.4,FALSE,,This controls the weight the compass or GPS has on the heading. A higher value means the heading will track the yaw source (GPS or compass) more rapidly.,0.1,1,MAV_PARAM_UNIT.UNKNOWN,"0.1,0.4",true,"AHRS_YAW_P(0.1,1,MAV_PARAM_UNIT.UNKNOWN,0.1,0.4,true,"""",""This controls the weight the compass or GPS has on the heading. A higher value means the heading will track the yaw source (GPS or compass) more rapidly.""),"
ANGLE_MAX,4500,,Centi-degrees,1000 8000,FALSE,,Maximum lean angle in all flight modes,4500,1,MAV_PARAM_UNIT.Centi_degrees,"1000,8000",true,"ANGLE_MAX(4500,1,MAV_PARAM_UNIT.Centi_degrees,1000,8000,true,"""",""Maximum lean angle in all flight modes""),"
ARMING_CHECK,94,,List,0:Disabled 1:Enabled -3:SkipBaro -5:SkipCompass -9:SkipGPS -17:SkipINS -33:SkipParams/Rangefinder -65:SkipRC 127:SkipVoltage,FALSE,,"Allows enabling or disabling of pre-arming checks of receiver, accelerometer, barometer, compass and GPS",94,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");put(-3,""SkipBaro"");put(-5,""SkipCompass"");put(-9,""SkipGPS"");put(-17,""SkipINS"");put(-33,""SkipParams/Rangefinder"");put(-65,""SkipRC"");put(127,""SkipVoltage"");}};",true,"ARMING_CHECK(94,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");put(-3,""SkipBaro"");put(-5,""SkipCompass"");put(-9,""SkipGPS"");put(-17,""SkipINS"");put(-33,""SkipParams/Rangefinder"");put(-65,""SkipRC"");put(127,""SkipVoltage"");}};,true,"""",""Allows enabling or disabling of pre-arming checks of receiver, accelerometer, barometer, compass and GPS""),"
ATC_ACCEL_RP_MAX,0,,,,FALSE,,Coming soon,0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"ATC_ACCEL_RP_MAX(0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
ATC_ACCEL_Y_MAX,0,,Centi-Degrees/Sec/Sec,0 720000:Disabled 18000:Slow 36000:Medium 54000:Fast,FALSE,,Maximum acceleration in yaw axis,0,1,MAV_PARAM_UNIT.Centi_Degrees_Sec_Sec,"0,720000:Disabled,18000:Slow,36000:Medium,54000:Fast",true,"ATC_ACCEL_Y_MAX(0,1,MAV_PARAM_UNIT.Centi_Degrees_Sec_Sec,0,720000:Disabled,18000:Slow,36000:Medium,54000:Fast,true,"""",""Maximum acceleration in yaw axis""),"
ATC_RATE_FF_ENAB,0,,Binary,0:Disabled 1:Enabled,FALSE,,Controls whether body-frame rate feedforward is enabled or disabled,0,1,MAV_PARAM_UNIT.Binary,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};",true,"ATC_RATE_FF_ENAB(0,1,MAV_PARAM_UNIT.Binary,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};,true,"""",""Controls whether body-frame rate feedforward is enabled or disabled""),"
ATC_RATE_RP_MAX,18000,,,,FALSE,,Coming soon,18000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"ATC_RATE_RP_MAX(18000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
ATC_RATE_Y_MAX,9000,,,,FALSE,,Coming soon,9000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"ATC_RATE_Y_MAX(9000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
ATC_SLEW_YAW,1000,,Centi-Degrees/Sec,500 18000,FALSE,,"Maximum rate the yaw target can be updated in Loiter, RTL, Auto flight modes",1000,1,MAV_PARAM_UNIT.Centi_Degrees_Sec,"500,18000",true,"ATC_SLEW_YAW(1000,1,MAV_PARAM_UNIT.Centi_Degrees_Sec,500,18000,true,"""",""Maximum rate the yaw target can be updated in Loiter, RTL, Auto flight modes""),"
BAROGLTCH_ACCEL,1500,,,,FALSE,,Coming soon,1500,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"BAROGLTCH_ACCEL(1500,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
BAROGLTCH_DIST,500,,,,FALSE,,Coming soon,500,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"BAROGLTCH_DIST(500,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
BAROGLTCH_ENABLE,1,,,,FALSE,,Coming soon,1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"BAROGLTCH_ENABLE(1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
BATT_AMP_OFFSET,0,,Volts,,FALSE,,Voltage offset at zero current on current sensor,0,1,MAV_PARAM_UNIT.Volts,null,true,"BATT_AMP_OFFSET(0,1,MAV_PARAM_UNIT.Volts,null,true,"""",""Voltage offset at zero current on current sensor""),"
BATT_AMP_PERVOLT,17,,Amps/Volt,,FALSE,,Number of amps that a 1V reading on the current sensor corresponds to. On the APM2 or Pixhawk using the 3DR Power brick this should be set to 17. For the Pixhawk with the 3DR 4in1 ESC this should be 17.,17,1,MAV_PARAM_UNIT.Amps_Volt,null,true,"BATT_AMP_PERVOLT(17,1,MAV_PARAM_UNIT.Amps_Volt,null,true,"""",""Number of amps that a 1V reading on the current sensor corresponds to. On the APM2 or Pixhawk using the 3DR Power brick this should be set to 17. For the Pixhawk with the 3DR 4in1 ESC this should be 17.""),"
BATT_CAPACITY,4000,,mAh,,FALSE,,Capacity of the battery in mAh when full,4000,1,MAV_PARAM_UNIT.mAh,null,true,"BATT_CAPACITY(4000,1,MAV_PARAM_UNIT.mAh,null,true,"""",""Capacity of the battery in mAh when full""),"
BATT_CURR_PIN,3,,List,-1:Disabled 1:A1 2:A2 3:Pixhawk 12:A12 101:PX4,FALSE,,Setting this to 0 ~ 13 will enable battery current sensing on pins A0 ~ A13. For the 3DR power brick on APM2.5 it should be set to 12. On the PX4 it should be set to 101. On the Pixhawk powered from the PM connector it should be set to 3.,3,1,MAV_PARAM_UNIT.List,"-1:Disabled,1:A1,2:A2,3:Pixhawk,12:A12,101:PX4",true,"BATT_CURR_PIN(3,1,MAV_PARAM_UNIT.List,-1:Disabled,1:A1,2:A2,3:Pixhawk,12:A12,101:PX4,true,"""",""Setting this to 0 ~ 13 will enable battery current sensing on pins A0 ~ A13. For the 3DR power brick on APM2.5 it should be set to 12. On the PX4 it should be set to 101. On the Pixhawk powered from the PM connector it should be set to 3.""),"
BATT_MONITOR,4,,List,0:Disabled 3:Analog_Voltage_Only 4:Analog_Voltage_and_Current 5:SMBus 6:Bebop,FALSE,,Controls enabling monitoring of the battery's voltage and current,4,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(3,""Analog_Voltage_Only"");put(4,""Analog_Voltage_and_Current"");put(5,""SMBus"");put(6,""Bebop"");}};",true,"BATT_MONITOR(4,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(3,""Analog_Voltage_Only"");put(4,""Analog_Voltage_and_Current"");put(5,""SMBus"");put(6,""Bebop"");}};,true,"""",""Controls enabling monitoring of the battery's voltage and current""),"
BATT_VOLT_MULT,10.1,,,,FALSE,,"Used to convert the voltage of the voltage sensing pin (BATT_VOLT_PIN) to the actual battery's voltage (pin_voltage * VOLT_MULT). For the 3DR Power brick on APM2 or Pixhawk, this should be set to 10.1. For the Pixhawk with the 3DR 4in1 ESC this should be 12.02. For the PX4 using the PX4IO power supply this should be set to 1.",10.1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"BATT_VOLT_MULT(10.1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Used to convert the voltage of the voltage sensing pin (BATT_VOLT_PIN) to the actual battery's voltage (pin_voltage * VOLT_MULT). For the 3DR Power brick on APM2 or Pixhawk, this should be set to 10.1. For the Pixhawk with the 3DR 4in1 ESC this should be 12.02. For the PX4 using the PX4IO power supply this should be set to 1.""),"
BATT_VOLT_PIN,2,,List,-1:Disabled 0:A0 1:A1 2:Pixhawk 13:A13 100:PX4,FALSE,,Setting this to 0 ~ 13 will enable battery voltage sensing on pins A0 ~ A13. For the 3DR power brick on APM2.5 it should be set to 13. On the PX4 it should be set to 100. On the Pixhawk powered from the PM connector it should be set to 2.,2,1,MAV_PARAM_UNIT.List,"-1:Disabled,0:A0,1:A1,2:Pixhawk,13:A13,100:PX4",true,"BATT_VOLT_PIN(2,1,MAV_PARAM_UNIT.List,-1:Disabled,0:A0,1:A1,2:Pixhawk,13:A13,100:PX4,true,"""",""Setting this to 0 ~ 13 will enable battery voltage sensing on pins A0 ~ A13. For the 3DR power brick on APM2.5 it should be set to 13. On the PX4 it should be set to 100. On the Pixhawk powered from the PM connector it should be set to 2.""),"
BATT_VOLT2_MULT,1,,,,FALSE,,Coming soon,1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"BATT_VOLT2_MULT(1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
BATT_VOLT2_PIN,-1,,,,FALSE,,Coming soon,-1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"BATT_VOLT2_PIN(-1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
CAM_DURATION,10,,seconds,0 50,FALSE,,"How long the shutter will be held open in 10ths of a second (i.e. enter 10 for 1second, 50 for 5seconds)",10,1,MAV_PARAM_UNIT.seconds,"0,50",true,"CAM_DURATION(10,1,MAV_PARAM_UNIT.seconds,0,50,true,"""",""How long the shutter will be held open in 10ths of a second (i.e. enter 10 for 1second, 50 for 5seconds)""),"
CAM_SERVO_OFF,1100,,PWM,1000 2000,FALSE,,PWM value to move servo to when shutter is deactivated,1100,1,MAV_PARAM_UNIT.PWM,"1000,2000",true,"CAM_SERVO_OFF(1100,1,MAV_PARAM_UNIT.PWM,1000,2000,true,"""",""PWM value to move servo to when shutter is deactivated""),"
CAM_SERVO_ON,1300,,PWM,1000 2000,FALSE,,PWM value to move servo to when shutter is activated,1300,1,MAV_PARAM_UNIT.PWM,"1000,2000",true,"CAM_SERVO_ON(1300,1,MAV_PARAM_UNIT.PWM,1000,2000,true,"""",""PWM value to move servo to when shutter is activated""),"
CAM_TRIGG_DIST,0,,Meters,0 1000,FALSE,,"Distance in meters between camera triggers. If this value is non-zero then the camera will trigger whenever the GPS position changes by this number of meters regardless of what mode the APM is in. Note that this parameter can also be set in an auto mission using the DO_SET_CAM_TRIGG_DIST command, allowing you to enable/disable the triggering of the camera during the flight.",0,1,MAV_PARAM_UNIT.Meters,"0,1000",true,"CAM_TRIGG_DIST(0,1,MAV_PARAM_UNIT.Meters,0,1000,true,"""",""Distance in meters between camera triggers. If this value is non-zero then the camera will trigger whenever the GPS position changes by this number of meters regardless of what mode the APM is in. Note that this parameter can also be set in an auto mission using the DO_SET_CAM_TRIGG_DIST command, allowing you to enable/disable the triggering of the camera during the flight.""),"
CAM_TRIGG_TYPE,0,,Binary,0:Servo 1:Relay,FALSE,,how to trigger the camera to take a picture,0,1,MAV_PARAM_UNIT.Binary,"new HashMap<Integer, String>(){{put(0,""Servo"");put(1,""Relay"");}};",true,"CAM_TRIGG_TYPE(0,1,MAV_PARAM_UNIT.Binary,new HashMap<Integer, String>(){{put(0,""Servo"");put(1,""Relay"");}};,true,"""",""how to trigger the camera to take a picture""),"
CH7_OPT,17,,List,0:DoNothing 2:Flip 3:SimpleMode 4:RTL 5:SaveTrim 7:SaveWP 9:CameraTrigger 10:RangeFinder 11:Fence 13:SuperSimpleMode 14:AcroTrainer 15:Sprayer 16:Auto 17:AutoTune 18:Land 19:EPM 21:ParachuteEnable 22:ParachuteRelease 23:Parachute3pos 24:AutoMissionReset 25:AttConFeedForward 26:AttCon Accel Limits 27:Retract Mount 28:Relay On/Off 34:Relay2 On/Off 35:Relay3 On/Off 36:Relay4 On/Off 29:Landing Gear 30:Lost Copter Sound 31:Motor Emergency Stop 32:Motor Interlock 33:Brake 37:Throw 38:Avoidance,FALSE,,Select which function is performed when CH7 is above 1800 pwm,17,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""DoNothing"");put(2,""Flip"");put(3,""SimpleMode"");put(4,""RTL"");put(5,""SaveTrim"");put(7,""SaveWP"");put(9,""CameraTrigger"");put(10,""RangeFinder"");put(11,""Fence"");put(13,""SuperSimpleMode"");put(14,""AcroTrainer"");put(15,""Sprayer"");put(16,""Auto"");put(17,""AutoTune"");put(18,""Land"");put(19,""EPM"");put(21,""ParachuteEnable"");put(22,""ParachuteRelease"");put(23,""Parachute3pos"");put(24,""AutoMissionReset"");put(25,""AttConFeedForward"");put(26,""AttCon"");put(Accel"");put(Limits"");put(27,""Retract"");put(Mount"");put(28,""Relay"");put(On/Off"");put(34,""Relay2"");put(On/Off"");put(35,""Relay3"");put(On/Off"");put(36,""Relay4"");put(On/Off"");put(29,""Landing"");put(Gear"");put(30,""Lost"");put(Copter"");put(Sound"");put(31,""Motor"");put(Emergency"");put(Stop"");put(32,""Motor"");put(Interlock"");put(33,""Brake"");put(37,""Throw"");put(38,""Avoidance"");}};",true,"CH7_OPT(17,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""DoNothing"");put(2,""Flip"");put(3,""SimpleMode"");put(4,""RTL"");put(5,""SaveTrim"");put(7,""SaveWP"");put(9,""CameraTrigger"");put(10,""RangeFinder"");put(11,""Fence"");put(13,""SuperSimpleMode"");put(14,""AcroTrainer"");put(15,""Sprayer"");put(16,""Auto"");put(17,""AutoTune"");put(18,""Land"");put(19,""EPM"");put(21,""ParachuteEnable"");put(22,""ParachuteRelease"");put(23,""Parachute3pos"");put(24,""AutoMissionReset"");put(25,""AttConFeedForward"");put(26,""AttCon"");put(Accel"");put(Limits"");put(27,""Retract"");put(Mount"");put(28,""Relay"");put(On/Off"");put(34,""Relay2"");put(On/Off"");put(35,""Relay3"");put(On/Off"");put(36,""Relay4"");put(On/Off"");put(29,""Landing"");put(Gear"");put(30,""Lost"");put(Copter"");put(Sound"");put(31,""Motor"");put(Emergency"");put(Stop"");put(32,""Motor"");put(Interlock"");put(33,""Brake"");put(37,""Throw"");put(38,""Avoidance"");}};,true,"""",""Select which function is performed when CH7 is above 1800 pwm""),"
CH8_OPT,0,,List,0:DoNothing 2:Flip 3:SimpleMode 4:RTL 5:SaveTrim 7:SaveWP 9:CameraTrigger 10:RangeFinder 11:Fence 13:SuperSimpleMode 14:AcroTrainer 15:Sprayer 16:Auto 17:AutoTune 18:Land 19:EPM 21:ParachuteEnable 22:ParachuteRelease 23:Parachute3pos 24:AutoMissionReset 25:AttConFeedForward 26:AttCon Accel Limits 27:Retract Mount 28:Relay On/Off 34:Relay2 On/Off 35:Relay3 On/Off 36:Relay4 On/Off 29:Landing Gear 30:Lost Copter Sound 31:Motor Emergency Stop 32:Motor Interlock 33:Brake 37:Throw 38:Avoidance,FALSE,,Select which function is performed when CH8 is above 1800 pwm,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""DoNothing"");put(2,""Flip"");put(3,""SimpleMode"");put(4,""RTL"");put(5,""SaveTrim"");put(7,""SaveWP"");put(9,""CameraTrigger"");put(10,""RangeFinder"");put(11,""Fence"");put(13,""SuperSimpleMode"");put(14,""AcroTrainer"");put(15,""Sprayer"");put(16,""Auto"");put(17,""AutoTune"");put(18,""Land"");put(19,""EPM"");put(21,""ParachuteEnable"");put(22,""ParachuteRelease"");put(23,""Parachute3pos"");put(24,""AutoMissionReset"");put(25,""AttConFeedForward"");put(26,""AttCon"");put(Accel"");put(Limits"");put(27,""Retract"");put(Mount"");put(28,""Relay"");put(On/Off"");put(34,""Relay2"");put(On/Off"");put(35,""Relay3"");put(On/Off"");put(36,""Relay4"");put(On/Off"");put(29,""Landing"");put(Gear"");put(30,""Lost"");put(Copter"");put(Sound"");put(31,""Motor"");put(Emergency"");put(Stop"");put(32,""Motor"");put(Interlock"");put(33,""Brake"");put(37,""Throw"");put(38,""Avoidance"");}};",true,"CH8_OPT(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""DoNothing"");put(2,""Flip"");put(3,""SimpleMode"");put(4,""RTL"");put(5,""SaveTrim"");put(7,""SaveWP"");put(9,""CameraTrigger"");put(10,""RangeFinder"");put(11,""Fence"");put(13,""SuperSimpleMode"");put(14,""AcroTrainer"");put(15,""Sprayer"");put(16,""Auto"");put(17,""AutoTune"");put(18,""Land"");put(19,""EPM"");put(21,""ParachuteEnable"");put(22,""ParachuteRelease"");put(23,""Parachute3pos"");put(24,""AutoMissionReset"");put(25,""AttConFeedForward"");put(26,""AttCon"");put(Accel"");put(Limits"");put(27,""Retract"");put(Mount"");put(28,""Relay"");put(On/Off"");put(34,""Relay2"");put(On/Off"");put(35,""Relay3"");put(On/Off"");put(36,""Relay4"");put(On/Off"");put(29,""Landing"");put(Gear"");put(30,""Lost"");put(Copter"");put(Sound"");put(31,""Motor"");put(Emergency"");put(Stop"");put(32,""Motor"");put(Interlock"");put(33,""Brake"");put(37,""Throw"");put(38,""Avoidance"");}};,true,"""",""Select which function is performed when CH8 is above 1800 pwm""),"
CIRCLE_RADIUS,500,,cm,0 10000,FALSE,,Defines the radius of the circle the vehicle will fly when in Circle flight mode,500,1,MAV_PARAM_UNIT.cm,"0,10000",true,"CIRCLE_RADIUS(500,1,MAV_PARAM_UNIT.cm,0,10000,true,"""",""Defines the radius of the circle the vehicle will fly when in Circle flight mode""),"
CIRCLE_RATE,20,,deg/s,-90 90,FALSE,,"Circle mode's turn rate in deg/sec. Positive to turn clockwise, negative for counter clockwise",20,1,MAV_PARAM_UNIT.deg_s,"-90,90",true,"CIRCLE_RATE(20,1,MAV_PARAM_UNIT.deg_s,-90,90,true,"""",""Circle mode's turn rate in deg/sec. Positive to turn clockwise, negative for counter clockwise""),"
COMPASS_AUTODEC,1,,Binary,0:Disabled 1:Enabled,FALSE,,Enable or disable the automatic calculation of the declination based on gps location,1,1,MAV_PARAM_UNIT.Binary,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};",true,"COMPASS_AUTODEC(1,1,MAV_PARAM_UNIT.Binary,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};,true,"""",""Enable or disable the automatic calculation of the declination based on gps location""),"
COMPASS_DEC,0.06941485,,Radians,-3.142 3.142,FALSE,,An angle to compensate between the true north and magnetic north,0.06941485,1,MAV_PARAM_UNIT.Radians,"-3.142,3.142",true,"COMPASS_DEC(0.06941485,1,MAV_PARAM_UNIT.Radians,-3.142,3.142,true,"""",""An angle to compensate between the true north and magnetic north""),"
COMPASS_EXTERNAL,0,,List,0:Internal 1:External 2:ForcedExternal,FALSE,,Configure compass so it is attached externally. This is auto-detected on PX4 and Pixhawk. Set to 1 if the compass is externally connected. When externally connected the COMPASS_ORIENT option operates independently of the AHRS_ORIENTATION board orientation option. If set to 0 or 1 then auto-detection by bus connection can override the value. If set to 2 then auto-detection will be disabled.,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Internal"");put(1,""External"");put(2,""ForcedExternal"");}};",true,"COMPASS_EXTERNAL(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Internal"");put(1,""External"");put(2,""ForcedExternal"");}};,true,"""",""Configure compass so it is attached externally. This is auto-detected on PX4 and Pixhawk. Set to 1 if the compass is externally connected. When externally connected the COMPASS_ORIENT option operates independently of the AHRS_ORIENTATION board orientation option. If set to 0 or 1 then auto-detection by bus connection can override the value. If set to 2 then auto-detection will be disabled.""),"
COMPASS_LEARN,0,,List,0:Disabled 1:Internal-Learning 2:EKF-Learning,FALSE,,Enable or disable the automatic learning of compass offsets. You can enable learning either using a compass-only method that is suitable only for fixed wing aircraft or using the offsets learnt by the active EKF state estimator. If this option is enabled then the learnt offsets are saved when you disarm the vehicle.,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Internal-Learning"");put(2,""EKF-Learning"");}};",true,"COMPASS_LEARN(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Internal-Learning"");put(2,""EKF-Learning"");}};,true,"""",""Enable or disable the automatic learning of compass offsets. You can enable learning either using a compass-only method that is suitable only for fixed wing aircraft or using the offsets learnt by the active EKF state estimator. If this option is enabled then the learnt offsets are saved when you disarm the vehicle.""),"
COMPASS_MOT_X,0,,Offset per Amp or at Full Throttle,-1000 1000,FALSE,,Multiplied by the current throttle and added to the compass's x-axis values to compensate for motor interference,0,1,MAV_PARAM_UNIT.Offset per Amp or at Full Throttle,"-1000,1000",true,"COMPASS_MOT_X(0,1,MAV_PARAM_UNIT.Offset per Amp or at Full Throttle,-1000,1000,true,"""",""Multiplied by the current throttle and added to the compass's x-axis values to compensate for motor interference""),"
COMPASS_MOT_Y,0,,Offset per Amp or at Full Throttle,-1000 1000,FALSE,,Multiplied by the current throttle and added to the compass's y-axis values to compensate for motor interference,0,1,MAV_PARAM_UNIT.Offset per Amp or at Full Throttle,"-1000,1000",true,"COMPASS_MOT_Y(0,1,MAV_PARAM_UNIT.Offset per Amp or at Full Throttle,-1000,1000,true,"""",""Multiplied by the current throttle and added to the compass's y-axis values to compensate for motor interference""),"
COMPASS_MOT_Z,0,,Offset per Amp or at Full Throttle,-1000 1000,FALSE,,Multiplied by the current throttle and added to the compass's z-axis values to compensate for motor interference,0,1,MAV_PARAM_UNIT.Offset per Amp or at Full Throttle,"-1000,1000",true,"COMPASS_MOT_Z(0,1,MAV_PARAM_UNIT.Offset per Amp or at Full Throttle,-1000,1000,true,"""",""Multiplied by the current throttle and added to the compass's z-axis values to compensate for motor interference""),"
COMPASS_MOTCT,0,,List,0:Disabled 1:UseThrottle 2:UseCurrent,FALSE,,"Set motor interference compensation type to disabled, throttle or current. Do not change manually.",0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""UseThrottle"");put(2,""UseCurrent"");}};",true,"COMPASS_MOTCT(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""UseThrottle"");put(2,""UseCurrent"");}};,true,"""",""Set motor interference compensation type to disabled, throttle or current. Do not change manually.""),"
COMPASS_OFS_X,-98,,Milligauss,-400 400,FALSE,,Offset to be added to the compass x-axis values to compensate for metal in the frame,-98,1,MAV_PARAM_UNIT.Milligauss,"-400,400",true,"COMPASS_OFS_X(-98,1,MAV_PARAM_UNIT.Milligauss,-400,400,true,"""",""Offset to be added to the compass x-axis values to compensate for metal in the frame""),"
COMPASS_OFS_Y,29,,Milligauss,-400 400,FALSE,,Offset to be added to the compass y-axis values to compensate for metal in the frame,29,1,MAV_PARAM_UNIT.Milligauss,"-400,400",true,"COMPASS_OFS_Y(29,1,MAV_PARAM_UNIT.Milligauss,-400,400,true,"""",""Offset to be added to the compass y-axis values to compensate for metal in the frame""),"
COMPASS_OFS_Z,-18,,Milligauss,-400 400,FALSE,,Offset to be added to the compass z-axis values to compensate for metal in the frame,-18,1,MAV_PARAM_UNIT.Milligauss,"-400,400",true,"COMPASS_OFS_Z(-18,1,MAV_PARAM_UNIT.Milligauss,-400,400,true,"""",""Offset to be added to the compass z-axis values to compensate for metal in the frame""),"
COMPASS_ORIENT,0,,List,0:None 1:Yaw45 2:Yaw90 3:Yaw135 4:Yaw180 5:Yaw225 6:Yaw270 7:Yaw315 8:Roll180 9:Roll180Yaw45 10:Roll180Yaw90 11:Roll180Yaw135 12:Pitch180 13:Roll180Yaw225 14:Roll180Yaw270 15:Roll180Yaw315 16:Roll90 17:Roll90Yaw45 18:Roll90Yaw90 19:Roll90Yaw135 20:Roll270 21:Roll270Yaw45 22:Roll270Yaw90 23:Roll270Yaw136 24:Pitch90 25:Pitch270 26:Pitch180Yaw90 27:Pitch180Yaw270 28:Roll90Pitch90 29:Roll180Pitch90 30:Roll270Pitch90 31:Roll90Pitch180 32:Roll270Pitch180 33:Roll90Pitch270 34:Roll180Pitch270 35:Roll270Pitch270 36:Roll90Pitch180Yaw90 37:Roll90Yaw270 38:Yaw293Pitch68Roll90,FALSE,,"The orientation of the compass relative to the autopilot board. This will default to the right value for each board type, but can be changed if you have an external compass. See the documentation for your external compass for the right value. The correct orientation should give the X axis forward, the Y axis to the right and the Z axis down. So if your aircraft is pointing west it should show a positive value for the Y axis, and a value close to zero for the X axis. On a PX4 or Pixhawk with an external compass the correct value is zero if the compass is correctly oriented. NOTE: This orientation is combined with any AHRS_ORIENTATION setting.",0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""None"");put(1,""Yaw45"");put(2,""Yaw90"");put(3,""Yaw135"");put(4,""Yaw180"");put(5,""Yaw225"");put(6,""Yaw270"");put(7,""Yaw315"");put(8,""Roll180"");put(9,""Roll180Yaw45"");put(10,""Roll180Yaw90"");put(11,""Roll180Yaw135"");put(12,""Pitch180"");put(13,""Roll180Yaw225"");put(14,""Roll180Yaw270"");put(15,""Roll180Yaw315"");put(16,""Roll90"");put(17,""Roll90Yaw45"");put(18,""Roll90Yaw90"");put(19,""Roll90Yaw135"");put(20,""Roll270"");put(21,""Roll270Yaw45"");put(22,""Roll270Yaw90"");put(23,""Roll270Yaw136"");put(24,""Pitch90"");put(25,""Pitch270"");put(26,""Pitch180Yaw90"");put(27,""Pitch180Yaw270"");put(28,""Roll90Pitch90"");put(29,""Roll180Pitch90"");put(30,""Roll270Pitch90"");put(31,""Roll90Pitch180"");put(32,""Roll270Pitch180"");put(33,""Roll90Pitch270"");put(34,""Roll180Pitch270"");put(35,""Roll270Pitch270"");put(36,""Roll90Pitch180Yaw90"");put(37,""Roll90Yaw270"");put(38,""Yaw293Pitch68Roll90"");}};",true,"COMPASS_ORIENT(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""None"");put(1,""Yaw45"");put(2,""Yaw90"");put(3,""Yaw135"");put(4,""Yaw180"");put(5,""Yaw225"");put(6,""Yaw270"");put(7,""Yaw315"");put(8,""Roll180"");put(9,""Roll180Yaw45"");put(10,""Roll180Yaw90"");put(11,""Roll180Yaw135"");put(12,""Pitch180"");put(13,""Roll180Yaw225"");put(14,""Roll180Yaw270"");put(15,""Roll180Yaw315"");put(16,""Roll90"");put(17,""Roll90Yaw45"");put(18,""Roll90Yaw90"");put(19,""Roll90Yaw135"");put(20,""Roll270"");put(21,""Roll270Yaw45"");put(22,""Roll270Yaw90"");put(23,""Roll270Yaw136"");put(24,""Pitch90"");put(25,""Pitch270"");put(26,""Pitch180Yaw90"");put(27,""Pitch180Yaw270"");put(28,""Roll90Pitch90"");put(29,""Roll180Pitch90"");put(30,""Roll270Pitch90"");put(31,""Roll90Pitch180"");put(32,""Roll270Pitch180"");put(33,""Roll90Pitch270"");put(34,""Roll180Pitch270"");put(35,""Roll270Pitch270"");put(36,""Roll90Pitch180Yaw90"");put(37,""Roll90Yaw270"");put(38,""Yaw293Pitch68Roll90"");}};,true,"""",""The orientation of the compass relative to the autopilot board. This will default to the right value for each board type, but can be changed if you have an external compass. See the documentation for your external compass for the right value. The correct orientation should give the X axis forward, the Y axis to the right and the Z axis down. So if your aircraft is pointing west it should show a positive value for the Y axis, and a value close to zero for the X axis. On a PX4 or Pixhawk with an external compass the correct value is zero if the compass is correctly oriented. NOTE: This orientation is combined with any AHRS_ORIENTATION setting.""),"
COMPASS_USE,1,,List,0:Disabled 1:Enabled,FALSE,,Enable or disable the use of the compass (instead of the GPS) for determining heading,1,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};",true,"COMPASS_USE(1,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};,true,"""",""Enable or disable the use of the compass (instead of the GPS) for determining heading""),"
DCM_CHECK_THRESH,0.8,,,,FALSE,,Coming soon,0.8,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"DCM_CHECK_THRESH(0.8,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
EKF_CHECK_THRESH,0.8,,,,FALSE,,Coming soon,0.8,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"EKF_CHECK_THRESH(0.8,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
ESC,0,,,,FALSE,,Coming soon,0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"ESC(0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
FENCE_ACTION,1,,List,0:ReportOnly 1:RTL-or-Land,FALSE,,What action should be taken when fence is breached,1,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""ReportOnly"");put(1,""RTL-or-Land"");}};",true,"FENCE_ACTION(1,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""ReportOnly"");put(1,""RTL-or-Land"");}};,true,"""",""What action should be taken when fence is breached""),"
FENCE_ALT_MAX,100,,Meters,-328443,FALSE,,Maximum altitude allowed before geofence triggers,100,1,MAV_PARAM_UNIT.Meters,-328443,true,"FENCE_ALT_MAX(100,1,MAV_PARAM_UNIT.Meters,-328443,true,"""",""Maximum altitude allowed before geofence triggers""),"
FENCE_ENABLE,1,,List,0:Disabled 1:Enabled,FALSE,,Allows you to enable (1) or disable (0) the fence functionality,1,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};",true,"FENCE_ENABLE(1,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};,true,"""",""Allows you to enable (1) or disable (0) the fence functionality""),"
FENCE_MARGIN,2,,Meters,I43475,FALSE,,Distance that autopilot's should maintain from the fence to avoid a breach,2,1,MAV_PARAM_UNIT.Meters,I43475,true,"FENCE_MARGIN(2,1,MAV_PARAM_UNIT.Meters,I43475,true,"""",""Distance that autopilot's should maintain from the fence to avoid a breach""),"
FENCE_RADIUS,300,,Meters,30 10000,FALSE,,Circle fence radius which when breached will cause an RTL,300,1,MAV_PARAM_UNIT.Meters,"30,10000",true,"FENCE_RADIUS(300,1,MAV_PARAM_UNIT.Meters,30,10000,true,"""",""Circle fence radius which when breached will cause an RTL""),"
FENCE_TYPE,1,,List,0:None 1:Altitude 2:Circle 3:AltitudeAndCircle 4:Polygon 5:AltitudeAndPolygon 6:CircleAndPolygon 7:All,FALSE,,Enabled fence types held as bitmask,1,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""None"");put(1,""Altitude"");put(2,""Circle"");put(3,""AltitudeAndCircle"");put(4,""Polygon"");put(5,""AltitudeAndPolygon"");put(6,""CircleAndPolygon"");put(7,""All"");}};",true,"FENCE_TYPE(1,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""None"");put(1,""Altitude"");put(2,""Circle"");put(3,""AltitudeAndCircle"");put(4,""Polygon"");put(5,""AltitudeAndPolygon"");put(6,""CircleAndPolygon"");put(7,""All"");}};,true,"""",""Enabled fence types held as bitmask""),"
FLOW_ENABLE,0,,List,0:Disabled 1:Enabled,FALSE,,Setting this to Enabled(1) will enable optical flow. Setting this to Disabled(0) will disable optical flow,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};",true,"FLOW_ENABLE(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};,true,"""",""Setting this to Enabled(1) will enable optical flow. Setting this to Disabled(0) will disable optical flow""),"
FLTMODE1,0,,List,0:Stabilize 1:Acro 2:AltHold 3:Auto 4:Guided 5:Loiter 6:RTL 7:Circle 9:Land 11:Drift 13:Sport 14:Flip 15:AutoTune 16:PosHold 17:Brake 18:Throw 19:Avoid_ADSB 20:Guided_NoGPS,FALSE,,Flight mode when Channel 5 pwm is <= 1230,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Stabilize"");put(1,""Acro"");put(2,""AltHold"");put(3,""Auto"");put(4,""Guided"");put(5,""Loiter"");put(6,""RTL"");put(7,""Circle"");put(9,""Land"");put(11,""Drift"");put(13,""Sport"");put(14,""Flip"");put(15,""AutoTune"");put(16,""PosHold"");put(17,""Brake"");put(18,""Throw"");put(19,""Avoid_ADSB"");put(20,""Guided_NoGPS"");}};",true,"FLTMODE1(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Stabilize"");put(1,""Acro"");put(2,""AltHold"");put(3,""Auto"");put(4,""Guided"");put(5,""Loiter"");put(6,""RTL"");put(7,""Circle"");put(9,""Land"");put(11,""Drift"");put(13,""Sport"");put(14,""Flip"");put(15,""AutoTune"");put(16,""PosHold"");put(17,""Brake"");put(18,""Throw"");put(19,""Avoid_ADSB"");put(20,""Guided_NoGPS"");}};,true,"""",""Flight mode when Channel 5 pwm is <= 1230""),"
FLTMODE2,0,,List,0:Stabilize 1:Acro 2:AltHold 3:Auto 4:Guided 5:Loiter 6:RTL 7:Circle 9:Land 11:Drift 13:Sport 14:Flip 15:AutoTune 16:PosHold 17:Brake 18:Throw 19:Avoid_ADSB 20:Guided_NoGPS,FALSE,,"Flight mode when Channel 5 pwm is >1230, <= 1360",0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Stabilize"");put(1,""Acro"");put(2,""AltHold"");put(3,""Auto"");put(4,""Guided"");put(5,""Loiter"");put(6,""RTL"");put(7,""Circle"");put(9,""Land"");put(11,""Drift"");put(13,""Sport"");put(14,""Flip"");put(15,""AutoTune"");put(16,""PosHold"");put(17,""Brake"");put(18,""Throw"");put(19,""Avoid_ADSB"");put(20,""Guided_NoGPS"");}};",true,"FLTMODE2(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Stabilize"");put(1,""Acro"");put(2,""AltHold"");put(3,""Auto"");put(4,""Guided"");put(5,""Loiter"");put(6,""RTL"");put(7,""Circle"");put(9,""Land"");put(11,""Drift"");put(13,""Sport"");put(14,""Flip"");put(15,""AutoTune"");put(16,""PosHold"");put(17,""Brake"");put(18,""Throw"");put(19,""Avoid_ADSB"");put(20,""Guided_NoGPS"");}};,true,"""",""Flight mode when Channel 5 pwm is >1230, <= 1360""),"
FLTMODE3,16,,List,0:Stabilize 1:Acro 2:AltHold 3:Auto 4:Guided 5:Loiter 6:RTL 7:Circle 9:Land 11:Drift 13:Sport 14:Flip 15:AutoTune 16:PosHold 17:Brake 18:Throw 19:Avoid_ADSB 20:Guided_NoGPS,FALSE,,"Flight mode when Channel 5 pwm is >1360, <= 1490",16,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Stabilize"");put(1,""Acro"");put(2,""AltHold"");put(3,""Auto"");put(4,""Guided"");put(5,""Loiter"");put(6,""RTL"");put(7,""Circle"");put(9,""Land"");put(11,""Drift"");put(13,""Sport"");put(14,""Flip"");put(15,""AutoTune"");put(16,""PosHold"");put(17,""Brake"");put(18,""Throw"");put(19,""Avoid_ADSB"");put(20,""Guided_NoGPS"");}};",true,"FLTMODE3(16,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Stabilize"");put(1,""Acro"");put(2,""AltHold"");put(3,""Auto"");put(4,""Guided"");put(5,""Loiter"");put(6,""RTL"");put(7,""Circle"");put(9,""Land"");put(11,""Drift"");put(13,""Sport"");put(14,""Flip"");put(15,""AutoTune"");put(16,""PosHold"");put(17,""Brake"");put(18,""Throw"");put(19,""Avoid_ADSB"");put(20,""Guided_NoGPS"");}};,true,"""",""Flight mode when Channel 5 pwm is >1360, <= 1490""),"
FLTMODE4,16,,List,0:Stabilize 1:Acro 2:AltHold 3:Auto 4:Guided 5:Loiter 6:RTL 7:Circle 9:Land 11:Drift 13:Sport 14:Flip 15:AutoTune 16:PosHold 17:Brake 18:Throw 19:Avoid_ADSB 20:Guided_NoGPS,FALSE,,"Flight mode when Channel 5 pwm is >1490, <= 1620",16,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Stabilize"");put(1,""Acro"");put(2,""AltHold"");put(3,""Auto"");put(4,""Guided"");put(5,""Loiter"");put(6,""RTL"");put(7,""Circle"");put(9,""Land"");put(11,""Drift"");put(13,""Sport"");put(14,""Flip"");put(15,""AutoTune"");put(16,""PosHold"");put(17,""Brake"");put(18,""Throw"");put(19,""Avoid_ADSB"");put(20,""Guided_NoGPS"");}};",true,"FLTMODE4(16,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Stabilize"");put(1,""Acro"");put(2,""AltHold"");put(3,""Auto"");put(4,""Guided"");put(5,""Loiter"");put(6,""RTL"");put(7,""Circle"");put(9,""Land"");put(11,""Drift"");put(13,""Sport"");put(14,""Flip"");put(15,""AutoTune"");put(16,""PosHold"");put(17,""Brake"");put(18,""Throw"");put(19,""Avoid_ADSB"");put(20,""Guided_NoGPS"");}};,true,"""",""Flight mode when Channel 5 pwm is >1490, <= 1620""),"
FLTMODE5,6,,List,0:Stabilize 1:Acro 2:AltHold 3:Auto 4:Guided 5:Loiter 6:RTL 7:Circle 9:Land 11:Drift 13:Sport 14:Flip 15:AutoTune 16:PosHold 17:Brake 18:Throw 19:Avoid_ADSB 20:Guided_NoGPS,FALSE,,"Flight mode when Channel 5 pwm is >1620, <= 1749",6,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Stabilize"");put(1,""Acro"");put(2,""AltHold"");put(3,""Auto"");put(4,""Guided"");put(5,""Loiter"");put(6,""RTL"");put(7,""Circle"");put(9,""Land"");put(11,""Drift"");put(13,""Sport"");put(14,""Flip"");put(15,""AutoTune"");put(16,""PosHold"");put(17,""Brake"");put(18,""Throw"");put(19,""Avoid_ADSB"");put(20,""Guided_NoGPS"");}};",true,"FLTMODE5(6,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Stabilize"");put(1,""Acro"");put(2,""AltHold"");put(3,""Auto"");put(4,""Guided"");put(5,""Loiter"");put(6,""RTL"");put(7,""Circle"");put(9,""Land"");put(11,""Drift"");put(13,""Sport"");put(14,""Flip"");put(15,""AutoTune"");put(16,""PosHold"");put(17,""Brake"");put(18,""Throw"");put(19,""Avoid_ADSB"");put(20,""Guided_NoGPS"");}};,true,"""",""Flight mode when Channel 5 pwm is >1620, <= 1749""),"
FLTMODE6,6,,List,0:Stabilize 1:Acro 2:AltHold 3:Auto 4:Guided 5:Loiter 6:RTL 7:Circle 9:Land 11:Drift 13:Sport 14:Flip 15:AutoTune 16:PosHold 17:Brake 18:Throw 19:Avoid_ADSB 20:Guided_NoGPS,FALSE,,Flight mode when Channel 5 pwm is >=1750,6,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Stabilize"");put(1,""Acro"");put(2,""AltHold"");put(3,""Auto"");put(4,""Guided"");put(5,""Loiter"");put(6,""RTL"");put(7,""Circle"");put(9,""Land"");put(11,""Drift"");put(13,""Sport"");put(14,""Flip"");put(15,""AutoTune"");put(16,""PosHold"");put(17,""Brake"");put(18,""Throw"");put(19,""Avoid_ADSB"");put(20,""Guided_NoGPS"");}};",true,"FLTMODE6(6,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Stabilize"");put(1,""Acro"");put(2,""AltHold"");put(3,""Auto"");put(4,""Guided"");put(5,""Loiter"");put(6,""RTL"");put(7,""Circle"");put(9,""Land"");put(11,""Drift"");put(13,""Sport"");put(14,""Flip"");put(15,""AutoTune"");put(16,""PosHold"");put(17,""Brake"");put(18,""Throw"");put(19,""Avoid_ADSB"");put(20,""Guided_NoGPS"");}};,true,"""",""Flight mode when Channel 5 pwm is >=1750""),"
FRAME,1,,List,0:Plus 1:X 2:V 3:H 4:V-Tail 5:A-Tail 10:Y6B (New),FALSE,,Controls motor mixing for multicopters. Not used for Tri or Traditional Helicopters.,1,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Plus"");put(1,""X"");put(2,""V"");put(3,""H"");put(4,""V-Tail"");put(5,""A-Tail"");put(10,""Y6B"");put((New)"");}};",true,"FRAME(1,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Plus"");put(1,""X"");put(2,""V"");put(3,""H"");put(4,""V-Tail"");put(5,""A-Tail"");put(10,""Y6B"");put((New)"");}};,true,"""",""Controls motor mixing for multicopters. Not used for Tri or Traditional Helicopters.""),"
FS_BATT_ENABLE,0,,List,0:Disabled 1:Land 2:RTL,FALSE,,Controls whether failsafe will be invoked when battery voltage or current runs low,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Land"");put(2,""RTL"");}};",true,"FS_BATT_ENABLE(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Land"");put(2,""RTL"");}};,true,"""",""Controls whether failsafe will be invoked when battery voltage or current runs low""),"
FS_BATT_MAH,0,,mAh,,FALSE,,Battery capacity remaining to trigger failsafe. Set to 0 to disable battery remaining failsafe. If the battery remaining drops below this level then the copter will RTL,0,1,MAV_PARAM_UNIT.mAh,null,true,"FS_BATT_MAH(0,1,MAV_PARAM_UNIT.mAh,null,true,"""",""Battery capacity remaining to trigger failsafe. Set to 0 to disable battery remaining failsafe. If the battery remaining drops below this level then the copter will RTL""),"
FS_BATT_VOLTAGE,14,,Volts,,FALSE,,Battery voltage to trigger failsafe. Set to 0 to disable battery voltage failsafe. If the battery voltage drops below this voltage then the copter will RTL,14,1,MAV_PARAM_UNIT.Volts,null,true,"FS_BATT_VOLTAGE(14,1,MAV_PARAM_UNIT.Volts,null,true,"""",""Battery voltage to trigger failsafe. Set to 0 to disable battery voltage failsafe. If the battery voltage drops below this voltage then the copter will RTL""),"
FS_GCS_ENABLE,0,,,0:Disabled 1:Enabled_always_RTL 2:Enabled_Continue_with_Mission_in_Auto_Mode,FALSE,,Controls whether failsafe will be invoked (and what action to take) when connection with Ground station is lost for at least 5 seconds. NB. The GCS Failsafe is only active when RC_OVERRIDE is being used to control the vehicle.,0,1,MAV_PARAM_UNIT.UNKNOWN,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled_always_RTL"");put(2,""Enabled_Continue_with_Mission_in_Auto_Mode"");}};",true,"FS_GCS_ENABLE(0,1,MAV_PARAM_UNIT.UNKNOWN,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled_always_RTL"");put(2,""Enabled_Continue_with_Mission_in_Auto_Mode"");}};,true,"""",""Controls whether failsafe will be invoked (and what action to take) when connection with Ground station is lost for at least 5 seconds. NB. The GCS Failsafe is only active when RC_OVERRIDE is being used to control the vehicle.""),"
FS_GPS_ENABLE,1,,,,FALSE,,Coming soon,1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"FS_GPS_ENABLE(1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
FS_THR_ENABLE,1,,,0:Disabled 1:Enabled_Always_RTL 2:Enabled_Continue_with_Mission_in_Auto_Mode 3:Enabled_Always_LAND,FALSE,,The throttle failsafe allows you to configure a software failsafe activated by a setting on the throttle input channel,1,1,MAV_PARAM_UNIT.UNKNOWN,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled_Always_RTL"");put(2,""Enabled_Continue_with_Mission_in_Auto_Mode"");put(3,""Enabled_Always_LAND"");}};",true,"FS_THR_ENABLE(1,1,MAV_PARAM_UNIT.UNKNOWN,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled_Always_RTL"");put(2,""Enabled_Continue_with_Mission_in_Auto_Mode"");put(3,""Enabled_Always_LAND"");}};,true,"""",""The throttle failsafe allows you to configure a software failsafe activated by a setting on the throttle input channel""),"
FS_THR_VALUE,975,,PWM,925 1100,FALSE,,The PWM level on channel 3 below which throttle failsafe triggers,975,1,MAV_PARAM_UNIT.PWM,"925,1100",true,"FS_THR_VALUE(975,1,MAV_PARAM_UNIT.PWM,925,1100,true,"""",""The PWM level on channel 3 below which throttle failsafe triggers""),"
GND_ABS_PRESS,50362.25,,Pascals,,FALSE,,calibrated ground pressure in Pascals,50362.25,1,MAV_PARAM_UNIT.Pascals,null,true,"GND_ABS_PRESS(50362.25,1,MAV_PARAM_UNIT.Pascals,null,true,"""",""calibrated ground pressure in Pascals""),"
GND_ALT_OFFSET,0,,Meters,,FALSE,,altitude offset in meters added to barometric altitude. This is used to allow for automatic adjustment of the base barometric altitude by a ground station equipped with a barometer. The value is added to the barometric altitude read by the aircraft. It is automatically reset to 0 when the barometer is calibrated on each reboot or when a preflight calibration is performed.,0,1,MAV_PARAM_UNIT.Meters,null,true,"GND_ALT_OFFSET(0,1,MAV_PARAM_UNIT.Meters,null,true,"""",""altitude offset in meters added to barometric altitude. This is used to allow for automatic adjustment of the base barometric altitude by a ground station equipped with a barometer. The value is added to the barometric altitude read by the aircraft. It is automatically reset to 0 when the barometer is calibrated on each reboot or when a preflight calibration is performed.""),"
GND_TEMP,29.32966,,Degrees-Celsius,,FALSE,,calibrated ground temperature in degrees Celsius,29.32966,1,MAV_PARAM_UNIT.Degrees_Celsius,null,true,"GND_TEMP(29.32966,1,MAV_PARAM_UNIT.Degrees_Celsius,null,true,"""",""calibrated ground temperature in degrees Celsius""),"
GPS_HDOP_GOOD,230,,,100 900,FALSE,,GPS Hdop value at or below this value represent a good position. Used for pre-arm checks,230,1,MAV_PARAM_UNIT.UNKNOWN,"100,900",true,"GPS_HDOP_GOOD(230,1,MAV_PARAM_UNIT.UNKNOWN,100,900,true,"""",""GPS Hdop value at or below this value represent a good position. Used for pre-arm checks""),"
GPS_NAVFILTER,8,,List,0:Portable 2:Stationary 3:Pedestrian 4:Automotive 5:Sea 6:Airborne1G 7:Airborne2G 8:Airborne4G,FALSE,,Navigation filter engine setting,8,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Portable"");put(2,""Stationary"");put(3,""Pedestrian"");put(4,""Automotive"");put(5,""Sea"");put(6,""Airborne1G"");put(7,""Airborne2G"");put(8,""Airborne4G"");}};",true,"GPS_NAVFILTER(8,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Portable"");put(2,""Stationary"");put(3,""Pedestrian"");put(4,""Automotive"");put(5,""Sea"");put(6,""Airborne1G"");put(7,""Airborne2G"");put(8,""Airborne4G"");}};,true,"""",""Navigation filter engine setting""),"
GPS_TYPE,1,,List,0:None 1:AUTO 2:uBlox 3:MTK 4:MTK19 5:NMEA 6:SiRF 7:HIL 8:SwiftNav 9:PX4-UAVCAN 10:SBF 11:GSOF 12:QURT 13:ERB 14:MAV 15:NOVA,FALSE,,GPS type,1,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""None"");put(1,""AUTO"");put(2,""uBlox"");put(3,""MTK"");put(4,""MTK19"");put(5,""NMEA"");put(6,""SiRF"");put(7,""HIL"");put(8,""SwiftNav"");put(9,""PX4-UAVCAN"");put(10,""SBF"");put(11,""GSOF"");put(12,""QURT"");put(13,""ERB"");put(14,""MAV"");put(15,""NOVA"");}};",true,"GPS_TYPE(1,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""None"");put(1,""AUTO"");put(2,""uBlox"");put(3,""MTK"");put(4,""MTK19"");put(5,""NMEA"");put(6,""SiRF"");put(7,""HIL"");put(8,""SwiftNav"");put(9,""PX4-UAVCAN"");put(10,""SBF"");put(11,""GSOF"");put(12,""QURT"");put(13,""ERB"");put(14,""MAV"");put(15,""NOVA"");}};,true,"""",""GPS type""),"
GPSGLITCH_ACCEL,1000,,,,FALSE,,Coming soon,1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"GPSGLITCH_ACCEL(1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
GPSGLITCH_ENABLE,1,,,,FALSE,,Coming soon,1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"GPSGLITCH_ENABLE(1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
GPSGLITCH_RADIUS,200,,,,FALSE,,Coming soon,200,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"GPSGLITCH_RADIUS(200,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
HLD_LAT_P,1,,,,FALSE,,Coming soon,1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"HLD_LAT_P(1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
INAV_TC_XY,2.5,,,,FALSE,,Coming soon,2.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"INAV_TC_XY(2.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
INAV_TC_Z,5,,,,FALSE,,Coming soon,5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"INAV_TC_Z(5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
INS_ACCOFFS_X,0.02704384,,m/s/s,-3.5 3.5,FALSE,,Accelerometer offsets of X axis. This is setup using the acceleration calibration or level operations,0.02704384,1,MAV_PARAM_UNIT.m_s_s,"-3.5,3.5",true,"INS_ACCOFFS_X(0.02704384,1,MAV_PARAM_UNIT.m_s_s,-3.5,3.5,true,"""",""Accelerometer offsets of X axis. This is setup using the acceleration calibration or level operations""),"
INS_ACCOFFS_Y,0.07232188,,m/s/s,-3.5 3.5,FALSE,,Accelerometer offsets of Y axis. This is setup using the acceleration calibration or level operations,0.07232188,1,MAV_PARAM_UNIT.m_s_s,"-3.5,3.5",true,"INS_ACCOFFS_Y(0.07232188,1,MAV_PARAM_UNIT.m_s_s,-3.5,3.5,true,"""",""Accelerometer offsets of Y axis. This is setup using the acceleration calibration or level operations""),"
INS_ACCOFFS_Z,-0.2916607,,m/s/s,-3.5 3.5,FALSE,,Accelerometer offsets of Z axis. This is setup using the acceleration calibration or level operations,-0.2916607,1,MAV_PARAM_UNIT.m_s_s,"-3.5,3.5",true,"INS_ACCOFFS_Z(-0.2916607,1,MAV_PARAM_UNIT.m_s_s,-3.5,3.5,true,"""",""Accelerometer offsets of Z axis. This is setup using the acceleration calibration or level operations""),"
INS_ACCSCAL_X,0.9998162,,,0.8 1.2,FALSE,,Accelerometer scaling of X axis. Calculated during acceleration calibration routine,0.9998162,1,MAV_PARAM_UNIT.UNKNOWN,"0.8,1.2",true,"INS_ACCSCAL_X(0.9998162,1,MAV_PARAM_UNIT.UNKNOWN,0.8,1.2,true,"""",""Accelerometer scaling of X axis. Calculated during acceleration calibration routine""),"
INS_ACCSCAL_Y,0.9920868,,,0.8 1.2,FALSE,,Accelerometer scaling of Y axis Calculated during acceleration calibration routine,0.9920868,1,MAV_PARAM_UNIT.UNKNOWN,"0.8,1.2",true,"INS_ACCSCAL_Y(0.9920868,1,MAV_PARAM_UNIT.UNKNOWN,0.8,1.2,true,"""",""Accelerometer scaling of Y axis Calculated during acceleration calibration routine""),"
INS_ACCSCAL_Z,1.0001,,,0.8 1.2,FALSE,,Accelerometer scaling of Z axis Calculated during acceleration calibration routine,1.0001,1,MAV_PARAM_UNIT.UNKNOWN,"0.8,1.2",true,"INS_ACCSCAL_Z(1.0001,1,MAV_PARAM_UNIT.UNKNOWN,0.8,1.2,true,"""",""Accelerometer scaling of Z axis Calculated during acceleration calibration routine""),"
INS_GYROFFS_X,-0.003293759,,rad/s,,FALSE,,Gyro sensor offsets of X axis. This is setup on each boot during gyro calibrations,-0.003293759,1,MAV_PARAM_UNIT.rad_s,null,true,"INS_GYROFFS_X(-0.003293759,1,MAV_PARAM_UNIT.rad_s,null,true,"""",""Gyro sensor offsets of X axis. This is setup on each boot during gyro calibrations""),"
INS_GYROFFS_Y,-0.07851811,,rad/s,,FALSE,,Gyro sensor offsets of Y axis. This is setup on each boot during gyro calibrations,-0.07851811,1,MAV_PARAM_UNIT.rad_s,null,true,"INS_GYROFFS_Y(-0.07851811,1,MAV_PARAM_UNIT.rad_s,null,true,"""",""Gyro sensor offsets of Y axis. This is setup on each boot during gyro calibrations""),"
INS_GYROFFS_Z,0.02421099,,rad/s,,FALSE,,Gyro sensor offsets of Z axis. This is setup on each boot during gyro calibrations,0.02421099,1,MAV_PARAM_UNIT.rad_s,null,true,"INS_GYROFFS_Z(0.02421099,1,MAV_PARAM_UNIT.rad_s,null,true,"""",""Gyro sensor offsets of Z axis. This is setup on each boot during gyro calibrations""),"
INS_MPU6K_FILTER,0,,,,FALSE,,Coming soon,0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"INS_MPU6K_FILTER(0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
INS_PRODUCT_ID,0,,List,0:Unknown 1:unused 2:unused 88:unused 3:SITL 4:PX4v1 5:PX4v2 256:unused 257:Linux,FALSE,,Which type of IMU is installed (read-only).,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Unknown"");put(1,""unused"");put(2,""unused"");put(88,""unused"");put(3,""SITL"");put(4,""PX4v1"");put(5,""PX4v2"");put(256,""unused"");put(257,""Linux"");}};",true,"INS_PRODUCT_ID(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Unknown"");put(1,""unused"");put(2,""unused"");put(88,""unused"");put(3,""SITL"");put(4,""PX4v1"");put(5,""PX4v2"");put(256,""unused"");put(257,""Linux"");}};,true,"""",""Which type of IMU is installed (read-only).""),"
LAND_REPOSITION,1,,Binary,0:NoRepositioning 1:Repositioning,FALSE,,"Enables user input during LAND mode, the landing phase of RTL, and auto mode landings.",1,1,MAV_PARAM_UNIT.Binary,"new HashMap<Integer, String>(){{put(0,""NoRepositioning"");put(1,""Repositioning"");}};",true,"LAND_REPOSITION(1,1,MAV_PARAM_UNIT.Binary,new HashMap<Integer, String>(){{put(0,""NoRepositioning"");put(1,""Repositioning"");}};,true,"""",""Enables user input during LAND mode, the landing phase of RTL, and auto mode landings.""),"
LAND_SPEED,50,,cm/s,30 200,FALSE,,The descent speed for the final stage of landing in cm/s,50,1,MAV_PARAM_UNIT.cm_s,"30,200",true,"LAND_SPEED(50,1,MAV_PARAM_UNIT.cm_s,30,200,true,"""",""The descent speed for the final stage of landing in cm/s""),"
LOG_BITMASK,26622,,List,830:Default 894:Default+RCIN 958:Default+IMU 1854:Default+Motors -6146:NearlyAll-AC315 45054:NearlyAll 131071:All+FastATT 262142:All+MotBatt 393214:All+FastIMU 397310:All+FastIMU+PID 655358:All+FullIMU 0:Disabled,FALSE,,4 byte bitmap of log types to enable,26622,1,MAV_PARAM_UNIT.List,"830:Default,894:Default+RCIN,958:Default+IMU,1854:Default+Motors,-6146:NearlyAll-AC315,45054:NearlyAll,131071:All+FastATT,262142:All+MotBatt,393214:All+FastIMU,397310:All+FastIMU+PID,655358:All+FullIMU,0:Disabled",true,"LOG_BITMASK(26622,1,MAV_PARAM_UNIT.List,830:Default,894:Default+RCIN,958:Default+IMU,1854:Default+Motors,-6146:NearlyAll-AC315,45054:NearlyAll,131071:All+FastATT,262142:All+MotBatt,393214:All+FastIMU,397310:All+FastIMU+PID,655358:All+FullIMU,0:Disabled,true,"""",""4 byte bitmap of log types to enable""),"
LOITER_LAT_D,0,,,,FALSE,,Coming soon,0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"LOITER_LAT_D(0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
LOITER_LAT_I,0.5,,,,FALSE,,Coming soon,0.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"LOITER_LAT_I(0.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
LOITER_LAT_IMAX,1000,,,,FALSE,,Coming soon,1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"LOITER_LAT_IMAX(1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
LOITER_LAT_P,1,,,,FALSE,,Coming soon,1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"LOITER_LAT_P(1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
LOITER_LON_D,0,,,,FALSE,,Coming soon,0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"LOITER_LON_D(0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
LOITER_LON_I,0.5,,,,FALSE,,Coming soon,0.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"LOITER_LON_I(0.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
LOITER_LON_IMAX,1000,,,,FALSE,,Coming soon,1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"LOITER_LON_IMAX(1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
LOITER_LON_P,1,,,,FALSE,,Coming soon,1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"LOITER_LON_P(1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
MAG_ENABLE,1,,List,0:Disabled 1:Enabled,FALSE,,Setting this to Enabled(1) will enable the compass. Setting this to Disabled(0) will disable the compass,1,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};",true,"MAG_ENABLE(1,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};,true,"""",""Setting this to Enabled(1) will enable the compass. Setting this to Disabled(0) will disable the compass""),"
MIS_RESTART,0,,List,0:ResumeMission 1:RestartMission,FALSE,,Controls mission starting point when entering Auto mode (either restart from beginning of mission or resume from last command run),0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""ResumeMission"");put(1,""RestartMission"");}};",true,"MIS_RESTART(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""ResumeMission"");put(1,""RestartMission"");}};,true,"""",""Controls mission starting point when entering Auto mode (either restart from beginning of mission or resume from last command run)""),"
MIS_TOTAL,6,,,0 32766,FALSE,,The number of mission mission items that has been loaded by the ground station. Do not change this manually.,6,1,MAV_PARAM_UNIT.UNKNOWN,"0,32766",true,"MIS_TOTAL(6,1,MAV_PARAM_UNIT.UNKNOWN,0,32766,true,"""",""The number of mission mission items that has been loaded by the ground station. Do not change this manually.""),"
MNT_ANGMAX_PAN,4500,,Centi-Degrees,-18000 17999,FALSE,,Maximum physical pan (yaw) angular position of the mount,4500,1,MAV_PARAM_UNIT.Centi_Degrees,"-18000,17999",true,"MNT_ANGMAX_PAN(4500,1,MAV_PARAM_UNIT.Centi_Degrees,-18000,17999,true,"""",""Maximum physical pan (yaw) angular position of the mount""),"
MNT_ANGMAX_ROL,4500,,Centi-Degrees,-18000 17999,FALSE,,Maximum physical roll angular position of the mount,4500,1,MAV_PARAM_UNIT.Centi_Degrees,"-18000,17999",true,"MNT_ANGMAX_ROL(4500,1,MAV_PARAM_UNIT.Centi_Degrees,-18000,17999,true,"""",""Maximum physical roll angular position of the mount""),"
MNT_ANGMAX_TIL,0,,Centi-Degrees,-18000 17999,FALSE,,Maximum physical tilt (pitch) angular position of the mount,0,1,MAV_PARAM_UNIT.Centi_Degrees,"-18000,17999",true,"MNT_ANGMAX_TIL(0,1,MAV_PARAM_UNIT.Centi_Degrees,-18000,17999,true,"""",""Maximum physical tilt (pitch) angular position of the mount""),"
MNT_ANGMIN_PAN,-4500,,Centi-Degrees,-18000 17999,FALSE,,Minimum physical pan (yaw) angular position of mount.,-4500,1,MAV_PARAM_UNIT.Centi_Degrees,"-18000,17999",true,"MNT_ANGMIN_PAN(-4500,1,MAV_PARAM_UNIT.Centi_Degrees,-18000,17999,true,"""",""Minimum physical pan (yaw) angular position of mount.""),"
MNT_ANGMIN_ROL,-4500,,Centi-Degrees,-18000 17999,FALSE,,Minimum physical roll angular position of mount.,-4500,1,MAV_PARAM_UNIT.Centi_Degrees,"-18000,17999",true,"MNT_ANGMIN_ROL(-4500,1,MAV_PARAM_UNIT.Centi_Degrees,-18000,17999,true,"""",""Minimum physical roll angular position of mount.""),"
MNT_ANGMIN_TIL,-9000,,Centi-Degrees,-18000 17999,FALSE,,Minimum physical tilt (pitch) angular position of mount.,-9000,1,MAV_PARAM_UNIT.Centi_Degrees,"-18000,17999",true,"MNT_ANGMIN_TIL(-9000,1,MAV_PARAM_UNIT.Centi_Degrees,-18000,17999,true,"""",""Minimum physical tilt (pitch) angular position of mount.""),"
MNT_CONTROL_X,0,,,,FALSE,,Coming soon,0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"MNT_CONTROL_X(0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
MNT_CONTROL_Y,0,,,,FALSE,,Coming soon,0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"MNT_CONTROL_Y(0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
MNT_CONTROL_Z,0,,,,FALSE,,Coming soon,0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"MNT_CONTROL_Z(0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
MNT_JSTICK_SPD,0,,,0 100,FALSE,,"0 for position control, small for low speeds, 100 for max speed. A good general value is 10 which gives a movement speed of 3 degrees per second.",0,1,MAV_PARAM_UNIT.UNKNOWN,"0,100",true,"MNT_JSTICK_SPD(0,1,MAV_PARAM_UNIT.UNKNOWN,0,100,true,"""",""0 for position control, small for low speeds, 100 for max speed. A good general value is 10 which gives a movement speed of 3 degrees per second.""),"
MNT_MODE,3,,,,FALSE,,Coming soon,3,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"MNT_MODE(3,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
MNT_NEUTRAL_X,0,,Degrees,-180.00 179.99,FALSE,,Mount roll angle when in neutral position,0,1,MAV_PARAM_UNIT.Degrees,"-180.00,179.99",true,"MNT_NEUTRAL_X(0,1,MAV_PARAM_UNIT.Degrees,-180.00,179.99,true,"""",""Mount roll angle when in neutral position""),"
MNT_NEUTRAL_Y,0,,Degrees,-180.00 179.99,FALSE,,Mount tilt/pitch angle when in neutral position,0,1,MAV_PARAM_UNIT.Degrees,"-180.00,179.99",true,"MNT_NEUTRAL_Y(0,1,MAV_PARAM_UNIT.Degrees,-180.00,179.99,true,"""",""Mount tilt/pitch angle when in neutral position""),"
MNT_NEUTRAL_Z,0,,Degrees,-180.00 179.99,FALSE,,Mount pan/yaw angle when in neutral position,0,1,MAV_PARAM_UNIT.Degrees,"-180.00,179.99",true,"MNT_NEUTRAL_Z(0,1,MAV_PARAM_UNIT.Degrees,-180.00,179.99,true,"""",""Mount pan/yaw angle when in neutral position""),"
MNT_RC_IN_PAN,0,,List,0:Disabled 5:RC5 6:RC6 7:RC7 8:RC8 9:RC9 10:RC10 11:RC11 12:RC12,FALSE,,"0 for none, any other for the RC channel to be used to control pan (yaw) movements",0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(5,""RC5"");put(6,""RC6"");put(7,""RC7"");put(8,""RC8"");put(9,""RC9"");put(10,""RC10"");put(11,""RC11"");put(12,""RC12"");}};",true,"MNT_RC_IN_PAN(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(5,""RC5"");put(6,""RC6"");put(7,""RC7"");put(8,""RC8"");put(9,""RC9"");put(10,""RC10"");put(11,""RC11"");put(12,""RC12"");}};,true,"""",""0 for none, any other for the RC channel to be used to control pan (yaw) movements""),"
MNT_RC_IN_ROLL,0,,List,0:Disabled 5:RC5 6:RC6 7:RC7 8:RC8 9:RC9 10:RC10 11:RC11 12:RC12,FALSE,,"0 for none, any other for the RC channel to be used to control roll movements",0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(5,""RC5"");put(6,""RC6"");put(7,""RC7"");put(8,""RC8"");put(9,""RC9"");put(10,""RC10"");put(11,""RC11"");put(12,""RC12"");}};",true,"MNT_RC_IN_ROLL(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(5,""RC5"");put(6,""RC6"");put(7,""RC7"");put(8,""RC8"");put(9,""RC9"");put(10,""RC10"");put(11,""RC11"");put(12,""RC12"");}};,true,"""",""0 for none, any other for the RC channel to be used to control roll movements""),"
MNT_RC_IN_TILT,6,,List,0:Disabled 5:RC5 6:RC6 7:RC7 8:RC8 9:RC9 10:RC10 11:RC11 12:RC12,FALSE,,"0 for none, any other for the RC channel to be used to control tilt (pitch) movements",6,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(5,""RC5"");put(6,""RC6"");put(7,""RC7"");put(8,""RC8"");put(9,""RC9"");put(10,""RC10"");put(11,""RC11"");put(12,""RC12"");}};",true,"MNT_RC_IN_TILT(6,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(5,""RC5"");put(6,""RC6"");put(7,""RC7"");put(8,""RC8"");put(9,""RC9"");put(10,""RC10"");put(11,""RC11"");put(12,""RC12"");}};,true,"""",""0 for none, any other for the RC channel to be used to control tilt (pitch) movements""),"
MNT_RETRACT_X,0,,Degrees,-180.00 179.99,FALSE,,Mount roll angle when in retracted position,0,1,MAV_PARAM_UNIT.Degrees,"-180.00,179.99",true,"MNT_RETRACT_X(0,1,MAV_PARAM_UNIT.Degrees,-180.00,179.99,true,"""",""Mount roll angle when in retracted position""),"
MNT_RETRACT_Y,0,,Degrees,-180.00 179.99,FALSE,,Mount tilt/pitch angle when in retracted position,0,1,MAV_PARAM_UNIT.Degrees,"-180.00,179.99",true,"MNT_RETRACT_Y(0,1,MAV_PARAM_UNIT.Degrees,-180.00,179.99,true,"""",""Mount tilt/pitch angle when in retracted position""),"
MNT_RETRACT_Z,0,,Degrees,-180.00 179.99,FALSE,,Mount yaw/pan angle when in retracted position,0,1,MAV_PARAM_UNIT.Degrees,"-180.00,179.99",true,"MNT_RETRACT_Z(0,1,MAV_PARAM_UNIT.Degrees,-180.00,179.99,true,"""",""Mount yaw/pan angle when in retracted position""),"
MNT_STAB_PAN,0,,List,0:Disabled 1:Enabled,FALSE,,enable pan/yaw stabilisation relative to Earth,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};",true,"MNT_STAB_PAN(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};,true,"""",""enable pan/yaw stabilisation relative to Earth""),"
MNT_STAB_ROLL,0,,List,0:Disabled 1:Enabled,FALSE,,enable roll stabilisation relative to Earth,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};",true,"MNT_STAB_ROLL(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};,true,"""",""enable roll stabilisation relative to Earth""),"
MNT_STAB_TILT,0,,List,0:Disabled 1:Enabled,FALSE,,enable tilt/pitch stabilisation relative to Earth,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};",true,"MNT_STAB_TILT(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Enabled"");}};,true,"""",""enable tilt/pitch stabilisation relative to Earth""),"
MOT_SPIN_ARMED,90,,,,FALSE,,Coming soon,90,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"MOT_SPIN_ARMED(90,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
MOT_TCRV_ENABLE,1,,,,FALSE,,Coming soon,1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"MOT_TCRV_ENABLE(1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
MOT_TCRV_MAXPCT,93,,,,FALSE,,Coming soon,93,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"MOT_TCRV_MAXPCT(93,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
MOT_TCRV_MIDPCT,52,,,,FALSE,,Coming soon,52,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"MOT_TCRV_MIDPCT(52,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
OF_PIT_D,0.12,,,,FALSE,,Coming soon,0.12,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"OF_PIT_D(0.12,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
OF_PIT_I,0.5,,,,FALSE,,Coming soon,0.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"OF_PIT_I(0.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
OF_PIT_IMAX,100,,,,FALSE,,Coming soon,100,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"OF_PIT_IMAX(100,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
OF_PIT_P,2.5,,,,FALSE,,Coming soon,2.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"OF_PIT_P(2.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
OF_RLL_D,0.12,,,,FALSE,,Coming soon,0.12,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"OF_RLL_D(0.12,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
OF_RLL_I,0.5,,,,FALSE,,Coming soon,0.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"OF_RLL_I(0.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
OF_RLL_IMAX,100,,,,FALSE,,Coming soon,100,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"OF_RLL_IMAX(100,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
OF_RLL_P,2.5,,,,FALSE,,Coming soon,2.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"OF_RLL_P(2.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
PHLD_BRAKE_ANGLE,3000,,Centi-degrees,2000 4500,FALSE,,PosHold flight mode's max lean angle during braking in centi-degrees,3000,1,MAV_PARAM_UNIT.Centi_degrees,"2000,4500",true,"PHLD_BRAKE_ANGLE(3000,1,MAV_PARAM_UNIT.Centi_degrees,2000,4500,true,"""",""PosHold flight mode's max lean angle during braking in centi-degrees""),"
PHLD_BRAKE_RATE,8,,deg/sec,43567,FALSE,,PosHold flight mode's rotation rate during braking in deg/sec,8,1,MAV_PARAM_UNIT.deg_sec,43567,true,"PHLD_BRAKE_RATE(8,1,MAV_PARAM_UNIT.deg_sec,43567,true,"""",""PosHold flight mode's rotation rate during braking in deg/sec""),"
PILOT_ACCEL_Z,250,,cm/s/s,50 500,FALSE,,The vertical acceleration used when pilot is controlling the altitude,250,1,MAV_PARAM_UNIT.cm_s_s,"50,500",true,"PILOT_ACCEL_Z(250,1,MAV_PARAM_UNIT.cm_s_s,50,500,true,"""",""The vertical acceleration used when pilot is controlling the altitude""),"
PILOT_VELZ_MAX,250,,Centimeters/Second,50 500,FALSE,,The maximum vertical velocity the pilot may request in cm/s,250,1,MAV_PARAM_UNIT.Centimeters_Second,"50,500",true,"PILOT_VELZ_MAX(250,1,MAV_PARAM_UNIT.Centimeters_Second,50,500,true,"""",""The maximum vertical velocity the pilot may request in cm/s""),"
POSCON_THR_HOVER,724,,,,FALSE,,Coming soon,724,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"POSCON_THR_HOVER(724,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RATE_PIT_D,0.0055,,,,FALSE,,Coming soon,0.0055,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RATE_PIT_D(0.0055,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RATE_PIT_I,0.07999999,,,,FALSE,,Coming soon,0.07999999,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RATE_PIT_I(0.07999999,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RATE_PIT_IMAX,1000,,,,FALSE,,Coming soon,1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RATE_PIT_IMAX(1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RATE_PIT_P,0.07999999,,,,FALSE,,Coming soon,0.07999999,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RATE_PIT_P(0.07999999,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RATE_RLL_D,0.003,,,,FALSE,,Coming soon,0.003,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RATE_RLL_D(0.003,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RATE_RLL_I,0.08499999,,,,FALSE,,Coming soon,0.08499999,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RATE_RLL_I(0.08499999,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RATE_RLL_IMAX,1000,,,,FALSE,,Coming soon,1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RATE_RLL_IMAX(1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RATE_RLL_P,0.08499999,,,,FALSE,,Coming soon,0.08499999,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RATE_RLL_P(0.08499999,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RATE_YAW_D,0.003,,,,FALSE,,Coming soon,0.003,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RATE_YAW_D(0.003,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RATE_YAW_I,0.02,,,,FALSE,,Coming soon,0.02,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RATE_YAW_I(0.02,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RATE_YAW_IMAX,1000,,,,FALSE,,Coming soon,1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RATE_YAW_IMAX(1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RATE_YAW_P,0.17,,,,FALSE,,Coming soon,0.17,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RATE_YAW_P(0.17,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RC_FEEL_RP,100,,List,0:Standard 1000:VerySoft 25:Soft 50:Medium 75:Crisp 100:VeryCrisp,FALSE,,RC feel for roll/pitch which controls vehicle response to user input with 0 being extremely soft and 100 being crisp,100,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Standard"");put(1000,""VerySoft"");put(25,""Soft"");put(50,""Medium"");put(75,""Crisp"");put(100,""VeryCrisp"");}};",true,"RC_FEEL_RP(100,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Standard"");put(1000,""VerySoft"");put(25,""Soft"");put(50,""Medium"");put(75,""Crisp"");put(100,""VeryCrisp"");}};,true,"""",""RC feel for roll/pitch which controls vehicle response to user input with 0 being extremely soft and 100 being crisp""),"
RC_SPEED,490,,Hz,50 490,FALSE,,This is the speed in Hertz that your ESCs will receive updates,490,1,MAV_PARAM_UNIT.Hz,"50,490",true,"RC_SPEED(490,1,MAV_PARAM_UNIT.Hz,50,490,true,"""",""This is the speed in Hertz that your ESCs will receive updates""),"
RC1_DZ,30,,PWM,0 200,FALSE,,dead zone around trim or bottom,30,1,MAV_PARAM_UNIT.PWM,"0,200",true,"RC1_DZ(30,1,MAV_PARAM_UNIT.PWM,0,200,true,"""",""dead zone around trim or bottom""),"
RC1_MAX,1976,,PWM,800 2200,FALSE,,"RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1976,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC1_MAX(1976,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC1_MIN,998,,PWM,800 2200,FALSE,,"RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",998,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC1_MIN(998,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC1_REV,1,,List,-1:Reversed 1:Normal,FALSE,,Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.,1,1,MAV_PARAM_UNIT.List,"-1:Reversed,1:Normal",true,"RC1_REV(1,1,MAV_PARAM_UNIT.List,-1:Reversed,1:Normal,true,"""",""Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.""),"
RC1_TRIM,1483,,PWM,800 2200,FALSE,,"RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1483,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC1_TRIM(1483,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC10_DZ,0,,PWM,0 200,FALSE,,dead zone around trim or bottom,0,1,MAV_PARAM_UNIT.PWM,"0,200",true,"RC10_DZ(0,1,MAV_PARAM_UNIT.PWM,0,200,true,"""",""dead zone around trim or bottom""),"
RC10_FUNCTION,0,,List,0:Disabled 1:RCPassThru 2:Flap 3:Flap_auto 4:Aileron 6:mount_pan 7:mount_tilt 8:mount_roll 9:mount_open 10:camera_trigger 11:release 12:mount2_pan 13:mount2_tilt 14:mount2_roll 15:mount2_open 16:DifferentialSpoiler1 17:DifferentialSpoiler2 18:AileronWithInput 19:Elevator 20:ElevatorWithInput 21:Rudder 24:Flaperon1 25:Flaperon2 26:GroundSteering 27:Parachute 28:EPM 29:LandingGear 30:EngineRunEnable 31:HeliRSC 32:HeliTailRSC 33:Motor1 34:Motor2 35:Motor3 36:Motor4 37:Motor5 38:Motor6 39:Motor7 40:Motor8 51:RCIN1 52:RCIN2 53:RCIN3 54:RCIN4 55:RCIN5 56:RCIN6 57:RCIN7 58:RCIN8 59:RCIN9 60:RCIN10 61:RCIN11 62:RCIN12 63:RCIN13 64:RCIN14 65:RCIN15 66:RCIN16 67:Ignition 68:Choke 69:Starter 70:Throttle,FALSE,,Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""RCPassThru"");put(2,""Flap"");put(3,""Flap_auto"");put(4,""Aileron"");put(6,""mount_pan"");put(7,""mount_tilt"");put(8,""mount_roll"");put(9,""mount_open"");put(10,""camera_trigger"");put(11,""release"");put(12,""mount2_pan"");put(13,""mount2_tilt"");put(14,""mount2_roll"");put(15,""mount2_open"");put(16,""DifferentialSpoiler1"");put(17,""DifferentialSpoiler2"");put(18,""AileronWithInput"");put(19,""Elevator"");put(20,""ElevatorWithInput"");put(21,""Rudder"");put(24,""Flaperon1"");put(25,""Flaperon2"");put(26,""GroundSteering"");put(27,""Parachute"");put(28,""EPM"");put(29,""LandingGear"");put(30,""EngineRunEnable"");put(31,""HeliRSC"");put(32,""HeliTailRSC"");put(33,""Motor1"");put(34,""Motor2"");put(35,""Motor3"");put(36,""Motor4"");put(37,""Motor5"");put(38,""Motor6"");put(39,""Motor7"");put(40,""Motor8"");put(51,""RCIN1"");put(52,""RCIN2"");put(53,""RCIN3"");put(54,""RCIN4"");put(55,""RCIN5"");put(56,""RCIN6"");put(57,""RCIN7"");put(58,""RCIN8"");put(59,""RCIN9"");put(60,""RCIN10"");put(61,""RCIN11"");put(62,""RCIN12"");put(63,""RCIN13"");put(64,""RCIN14"");put(65,""RCIN15"");put(66,""RCIN16"");put(67,""Ignition"");put(68,""Choke"");put(69,""Starter"");put(70,""Throttle"");}};",true,"RC10_FUNCTION(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""RCPassThru"");put(2,""Flap"");put(3,""Flap_auto"");put(4,""Aileron"");put(6,""mount_pan"");put(7,""mount_tilt"");put(8,""mount_roll"");put(9,""mount_open"");put(10,""camera_trigger"");put(11,""release"");put(12,""mount2_pan"");put(13,""mount2_tilt"");put(14,""mount2_roll"");put(15,""mount2_open"");put(16,""DifferentialSpoiler1"");put(17,""DifferentialSpoiler2"");put(18,""AileronWithInput"");put(19,""Elevator"");put(20,""ElevatorWithInput"");put(21,""Rudder"");put(24,""Flaperon1"");put(25,""Flaperon2"");put(26,""GroundSteering"");put(27,""Parachute"");put(28,""EPM"");put(29,""LandingGear"");put(30,""EngineRunEnable"");put(31,""HeliRSC"");put(32,""HeliTailRSC"");put(33,""Motor1"");put(34,""Motor2"");put(35,""Motor3"");put(36,""Motor4"");put(37,""Motor5"");put(38,""Motor6"");put(39,""Motor7"");put(40,""Motor8"");put(51,""RCIN1"");put(52,""RCIN2"");put(53,""RCIN3"");put(54,""RCIN4"");put(55,""RCIN5"");put(56,""RCIN6"");put(57,""RCIN7"");put(58,""RCIN8"");put(59,""RCIN9"");put(60,""RCIN10"");put(61,""RCIN11"");put(62,""RCIN12"");put(63,""RCIN13"");put(64,""RCIN14"");put(65,""RCIN15"");put(66,""RCIN16"");put(67,""Ignition"");put(68,""Choke"");put(69,""Starter"");put(70,""Throttle"");}};,true,"""",""Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function""),"
RC10_MAX,1900,,PWM,800 2200,FALSE,,"RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1900,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC10_MAX(1900,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC10_MIN,1100,,PWM,800 2200,FALSE,,"RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1100,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC10_MIN(1100,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC10_REV,1,,List,-1:Reversed 1:Normal,FALSE,,Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.,1,1,MAV_PARAM_UNIT.List,"-1:Reversed,1:Normal",true,"RC10_REV(1,1,MAV_PARAM_UNIT.List,-1:Reversed,1:Normal,true,"""",""Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.""),"
RC10_TRIM,0,,PWM,800 2200,FALSE,,"RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",0,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC10_TRIM(0,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC11_DZ,0,,PWM,0 200,FALSE,,dead zone around trim or bottom,0,1,MAV_PARAM_UNIT.PWM,"0,200",true,"RC11_DZ(0,1,MAV_PARAM_UNIT.PWM,0,200,true,"""",""dead zone around trim or bottom""),"
RC11_FUNCTION,0,,List,0:Disabled 1:RCPassThru 2:Flap 3:Flap_auto 4:Aileron 6:mount_pan 7:mount_tilt 8:mount_roll 9:mount_open 10:camera_trigger 11:release 12:mount2_pan 13:mount2_tilt 14:mount2_roll 15:mount2_open 16:DifferentialSpoiler1 17:DifferentialSpoiler2 18:AileronWithInput 19:Elevator 20:ElevatorWithInput 21:Rudder 24:Flaperon1 25:Flaperon2 26:GroundSteering 27:Parachute 28:EPM 29:LandingGear 30:EngineRunEnable 31:HeliRSC 32:HeliTailRSC 33:Motor1 34:Motor2 35:Motor3 36:Motor4 37:Motor5 38:Motor6 39:Motor7 40:Motor8 51:RCIN1 52:RCIN2 53:RCIN3 54:RCIN4 55:RCIN5 56:RCIN6 57:RCIN7 58:RCIN8 59:RCIN9 60:RCIN10 61:RCIN11 62:RCIN12 63:RCIN13 64:RCIN14 65:RCIN15 66:RCIN16 67:Ignition 68:Choke 69:Starter 70:Throttle,FALSE,,Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""RCPassThru"");put(2,""Flap"");put(3,""Flap_auto"");put(4,""Aileron"");put(6,""mount_pan"");put(7,""mount_tilt"");put(8,""mount_roll"");put(9,""mount_open"");put(10,""camera_trigger"");put(11,""release"");put(12,""mount2_pan"");put(13,""mount2_tilt"");put(14,""mount2_roll"");put(15,""mount2_open"");put(16,""DifferentialSpoiler1"");put(17,""DifferentialSpoiler2"");put(18,""AileronWithInput"");put(19,""Elevator"");put(20,""ElevatorWithInput"");put(21,""Rudder"");put(24,""Flaperon1"");put(25,""Flaperon2"");put(26,""GroundSteering"");put(27,""Parachute"");put(28,""EPM"");put(29,""LandingGear"");put(30,""EngineRunEnable"");put(31,""HeliRSC"");put(32,""HeliTailRSC"");put(33,""Motor1"");put(34,""Motor2"");put(35,""Motor3"");put(36,""Motor4"");put(37,""Motor5"");put(38,""Motor6"");put(39,""Motor7"");put(40,""Motor8"");put(51,""RCIN1"");put(52,""RCIN2"");put(53,""RCIN3"");put(54,""RCIN4"");put(55,""RCIN5"");put(56,""RCIN6"");put(57,""RCIN7"");put(58,""RCIN8"");put(59,""RCIN9"");put(60,""RCIN10"");put(61,""RCIN11"");put(62,""RCIN12"");put(63,""RCIN13"");put(64,""RCIN14"");put(65,""RCIN15"");put(66,""RCIN16"");put(67,""Ignition"");put(68,""Choke"");put(69,""Starter"");put(70,""Throttle"");}};",true,"RC11_FUNCTION(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""RCPassThru"");put(2,""Flap"");put(3,""Flap_auto"");put(4,""Aileron"");put(6,""mount_pan"");put(7,""mount_tilt"");put(8,""mount_roll"");put(9,""mount_open"");put(10,""camera_trigger"");put(11,""release"");put(12,""mount2_pan"");put(13,""mount2_tilt"");put(14,""mount2_roll"");put(15,""mount2_open"");put(16,""DifferentialSpoiler1"");put(17,""DifferentialSpoiler2"");put(18,""AileronWithInput"");put(19,""Elevator"");put(20,""ElevatorWithInput"");put(21,""Rudder"");put(24,""Flaperon1"");put(25,""Flaperon2"");put(26,""GroundSteering"");put(27,""Parachute"");put(28,""EPM"");put(29,""LandingGear"");put(30,""EngineRunEnable"");put(31,""HeliRSC"");put(32,""HeliTailRSC"");put(33,""Motor1"");put(34,""Motor2"");put(35,""Motor3"");put(36,""Motor4"");put(37,""Motor5"");put(38,""Motor6"");put(39,""Motor7"");put(40,""Motor8"");put(51,""RCIN1"");put(52,""RCIN2"");put(53,""RCIN3"");put(54,""RCIN4"");put(55,""RCIN5"");put(56,""RCIN6"");put(57,""RCIN7"");put(58,""RCIN8"");put(59,""RCIN9"");put(60,""RCIN10"");put(61,""RCIN11"");put(62,""RCIN12"");put(63,""RCIN13"");put(64,""RCIN14"");put(65,""RCIN15"");put(66,""RCIN16"");put(67,""Ignition"");put(68,""Choke"");put(69,""Starter"");put(70,""Throttle"");}};,true,"""",""Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function""),"
RC11_MAX,1900,,PWM,800 2200,FALSE,,"RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1900,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC11_MAX(1900,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC11_MIN,1100,,PWM,800 2200,FALSE,,"RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1100,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC11_MIN(1100,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC11_REV,1,,List,-1:Reversed 1:Normal,FALSE,,Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.,1,1,MAV_PARAM_UNIT.List,"-1:Reversed,1:Normal",true,"RC11_REV(1,1,MAV_PARAM_UNIT.List,-1:Reversed,1:Normal,true,"""",""Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.""),"
RC11_TRIM,0,,PWM,800 2200,FALSE,,"RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",0,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC11_TRIM(0,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC2_DZ,30,,PWM,0 200,FALSE,,dead zone around trim or bottom,30,1,MAV_PARAM_UNIT.PWM,"0,200",true,"RC2_DZ(30,1,MAV_PARAM_UNIT.PWM,0,200,true,"""",""dead zone around trim or bottom""),"
RC2_MAX,1983,,PWM,800 2200,FALSE,,"RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1983,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC2_MAX(1983,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC2_MIN,996,,PWM,800 2200,FALSE,,"RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",996,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC2_MIN(996,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC2_REV,1,,List,-1:Reversed 1:Normal,FALSE,,Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.,1,1,MAV_PARAM_UNIT.List,"-1:Reversed,1:Normal",true,"RC2_REV(1,1,MAV_PARAM_UNIT.List,-1:Reversed,1:Normal,true,"""",""Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.""),"
RC2_TRIM,1492,,PWM,800 2200,FALSE,,"RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1492,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC2_TRIM(1492,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC3_DZ,30,,PWM,0 200,FALSE,,dead zone around trim or bottom,30,1,MAV_PARAM_UNIT.PWM,"0,200",true,"RC3_DZ(30,1,MAV_PARAM_UNIT.PWM,0,200,true,"""",""dead zone around trim or bottom""),"
RC3_MAX,1982,,PWM,800 2200,FALSE,,"RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1982,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC3_MAX(1982,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC3_MIN,996,,PWM,800 2200,FALSE,,"RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",996,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC3_MIN(996,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC3_REV,1,,List,-1:Reversed 1:Normal,FALSE,,Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.,1,1,MAV_PARAM_UNIT.List,"-1:Reversed,1:Normal",true,"RC3_REV(1,1,MAV_PARAM_UNIT.List,-1:Reversed,1:Normal,true,"""",""Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.""),"
RC3_TRIM,1000,,PWM,800 2200,FALSE,,"RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1000,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC3_TRIM(1000,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC4_DZ,40,,PWM,0 200,FALSE,,dead zone around trim or bottom,40,1,MAV_PARAM_UNIT.PWM,"0,200",true,"RC4_DZ(40,1,MAV_PARAM_UNIT.PWM,0,200,true,"""",""dead zone around trim or bottom""),"
RC4_MAX,1981,,PWM,800 2200,FALSE,,"RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1981,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC4_MAX(1981,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC4_MIN,992,,PWM,800 2200,FALSE,,"RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",992,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC4_MIN(992,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC4_REV,1,,List,-1:Reversed 1:Normal,FALSE,,Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.,1,1,MAV_PARAM_UNIT.List,"-1:Reversed,1:Normal",true,"RC4_REV(1,1,MAV_PARAM_UNIT.List,-1:Reversed,1:Normal,true,"""",""Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.""),"
RC4_TRIM,1486,,PWM,800 2200,FALSE,,"RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1486,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC4_TRIM(1486,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC5_DZ,0,,PWM,0 200,FALSE,,dead zone around trim or bottom,0,1,MAV_PARAM_UNIT.PWM,"0,200",true,"RC5_DZ(0,1,MAV_PARAM_UNIT.PWM,0,200,true,"""",""dead zone around trim or bottom""),"
RC5_FUNCTION,0,,List,0:Disabled 1:RCPassThru 2:Flap 3:Flap_auto 4:Aileron 6:mount_pan 7:mount_tilt 8:mount_roll 9:mount_open 10:camera_trigger 11:release 12:mount2_pan 13:mount2_tilt 14:mount2_roll 15:mount2_open 16:DifferentialSpoiler1 17:DifferentialSpoiler2 18:AileronWithInput 19:Elevator 20:ElevatorWithInput 21:Rudder 24:Flaperon1 25:Flaperon2 26:GroundSteering 27:Parachute 28:EPM 29:LandingGear 30:EngineRunEnable 31:HeliRSC 32:HeliTailRSC 33:Motor1 34:Motor2 35:Motor3 36:Motor4 37:Motor5 38:Motor6 39:Motor7 40:Motor8 51:RCIN1 52:RCIN2 53:RCIN3 54:RCIN4 55:RCIN5 56:RCIN6 57:RCIN7 58:RCIN8 59:RCIN9 60:RCIN10 61:RCIN11 62:RCIN12 63:RCIN13 64:RCIN14 65:RCIN15 66:RCIN16 67:Ignition 68:Choke 69:Starter 70:Throttle,FALSE,,Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""RCPassThru"");put(2,""Flap"");put(3,""Flap_auto"");put(4,""Aileron"");put(6,""mount_pan"");put(7,""mount_tilt"");put(8,""mount_roll"");put(9,""mount_open"");put(10,""camera_trigger"");put(11,""release"");put(12,""mount2_pan"");put(13,""mount2_tilt"");put(14,""mount2_roll"");put(15,""mount2_open"");put(16,""DifferentialSpoiler1"");put(17,""DifferentialSpoiler2"");put(18,""AileronWithInput"");put(19,""Elevator"");put(20,""ElevatorWithInput"");put(21,""Rudder"");put(24,""Flaperon1"");put(25,""Flaperon2"");put(26,""GroundSteering"");put(27,""Parachute"");put(28,""EPM"");put(29,""LandingGear"");put(30,""EngineRunEnable"");put(31,""HeliRSC"");put(32,""HeliTailRSC"");put(33,""Motor1"");put(34,""Motor2"");put(35,""Motor3"");put(36,""Motor4"");put(37,""Motor5"");put(38,""Motor6"");put(39,""Motor7"");put(40,""Motor8"");put(51,""RCIN1"");put(52,""RCIN2"");put(53,""RCIN3"");put(54,""RCIN4"");put(55,""RCIN5"");put(56,""RCIN6"");put(57,""RCIN7"");put(58,""RCIN8"");put(59,""RCIN9"");put(60,""RCIN10"");put(61,""RCIN11"");put(62,""RCIN12"");put(63,""RCIN13"");put(64,""RCIN14"");put(65,""RCIN15"");put(66,""RCIN16"");put(67,""Ignition"");put(68,""Choke"");put(69,""Starter"");put(70,""Throttle"");}};",true,"RC5_FUNCTION(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""RCPassThru"");put(2,""Flap"");put(3,""Flap_auto"");put(4,""Aileron"");put(6,""mount_pan"");put(7,""mount_tilt"");put(8,""mount_roll"");put(9,""mount_open"");put(10,""camera_trigger"");put(11,""release"");put(12,""mount2_pan"");put(13,""mount2_tilt"");put(14,""mount2_roll"");put(15,""mount2_open"");put(16,""DifferentialSpoiler1"");put(17,""DifferentialSpoiler2"");put(18,""AileronWithInput"");put(19,""Elevator"");put(20,""ElevatorWithInput"");put(21,""Rudder"");put(24,""Flaperon1"");put(25,""Flaperon2"");put(26,""GroundSteering"");put(27,""Parachute"");put(28,""EPM"");put(29,""LandingGear"");put(30,""EngineRunEnable"");put(31,""HeliRSC"");put(32,""HeliTailRSC"");put(33,""Motor1"");put(34,""Motor2"");put(35,""Motor3"");put(36,""Motor4"");put(37,""Motor5"");put(38,""Motor6"");put(39,""Motor7"");put(40,""Motor8"");put(51,""RCIN1"");put(52,""RCIN2"");put(53,""RCIN3"");put(54,""RCIN4"");put(55,""RCIN5"");put(56,""RCIN6"");put(57,""RCIN7"");put(58,""RCIN8"");put(59,""RCIN9"");put(60,""RCIN10"");put(61,""RCIN11"");put(62,""RCIN12"");put(63,""RCIN13"");put(64,""RCIN14"");put(65,""RCIN15"");put(66,""RCIN16"");put(67,""Ignition"");put(68,""Choke"");put(69,""Starter"");put(70,""Throttle"");}};,true,"""",""Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function""),"
RC5_MAX,1982,,PWM,800 2200,FALSE,,"RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1982,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC5_MAX(1982,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC5_MIN,992,,PWM,800 2200,FALSE,,"RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",992,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC5_MIN(992,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC5_REV,1,,List,-1:Reversed 1:Normal,FALSE,,Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.,1,1,MAV_PARAM_UNIT.List,"-1:Reversed,1:Normal",true,"RC5_REV(1,1,MAV_PARAM_UNIT.List,-1:Reversed,1:Normal,true,"""",""Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.""),"
RC5_TRIM,993,,PWM,800 2200,FALSE,,"RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",993,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC5_TRIM(993,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC6_DZ,0,,PWM,0 200,FALSE,,dead zone around trim or bottom,0,1,MAV_PARAM_UNIT.PWM,"0,200",true,"RC6_DZ(0,1,MAV_PARAM_UNIT.PWM,0,200,true,"""",""dead zone around trim or bottom""),"
RC6_FUNCTION,0,,List,0:Disabled 1:RCPassThru 2:Flap 3:Flap_auto 4:Aileron 6:mount_pan 7:mount_tilt 8:mount_roll 9:mount_open 10:camera_trigger 11:release 12:mount2_pan 13:mount2_tilt 14:mount2_roll 15:mount2_open 16:DifferentialSpoiler1 17:DifferentialSpoiler2 18:AileronWithInput 19:Elevator 20:ElevatorWithInput 21:Rudder 24:Flaperon1 25:Flaperon2 26:GroundSteering 27:Parachute 28:EPM 29:LandingGear 30:EngineRunEnable 31:HeliRSC 32:HeliTailRSC 33:Motor1 34:Motor2 35:Motor3 36:Motor4 37:Motor5 38:Motor6 39:Motor7 40:Motor8 51:RCIN1 52:RCIN2 53:RCIN3 54:RCIN4 55:RCIN5 56:RCIN6 57:RCIN7 58:RCIN8 59:RCIN9 60:RCIN10 61:RCIN11 62:RCIN12 63:RCIN13 64:RCIN14 65:RCIN15 66:RCIN16 67:Ignition 68:Choke 69:Starter 70:Throttle,FALSE,,Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""RCPassThru"");put(2,""Flap"");put(3,""Flap_auto"");put(4,""Aileron"");put(6,""mount_pan"");put(7,""mount_tilt"");put(8,""mount_roll"");put(9,""mount_open"");put(10,""camera_trigger"");put(11,""release"");put(12,""mount2_pan"");put(13,""mount2_tilt"");put(14,""mount2_roll"");put(15,""mount2_open"");put(16,""DifferentialSpoiler1"");put(17,""DifferentialSpoiler2"");put(18,""AileronWithInput"");put(19,""Elevator"");put(20,""ElevatorWithInput"");put(21,""Rudder"");put(24,""Flaperon1"");put(25,""Flaperon2"");put(26,""GroundSteering"");put(27,""Parachute"");put(28,""EPM"");put(29,""LandingGear"");put(30,""EngineRunEnable"");put(31,""HeliRSC"");put(32,""HeliTailRSC"");put(33,""Motor1"");put(34,""Motor2"");put(35,""Motor3"");put(36,""Motor4"");put(37,""Motor5"");put(38,""Motor6"");put(39,""Motor7"");put(40,""Motor8"");put(51,""RCIN1"");put(52,""RCIN2"");put(53,""RCIN3"");put(54,""RCIN4"");put(55,""RCIN5"");put(56,""RCIN6"");put(57,""RCIN7"");put(58,""RCIN8"");put(59,""RCIN9"");put(60,""RCIN10"");put(61,""RCIN11"");put(62,""RCIN12"");put(63,""RCIN13"");put(64,""RCIN14"");put(65,""RCIN15"");put(66,""RCIN16"");put(67,""Ignition"");put(68,""Choke"");put(69,""Starter"");put(70,""Throttle"");}};",true,"RC6_FUNCTION(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""RCPassThru"");put(2,""Flap"");put(3,""Flap_auto"");put(4,""Aileron"");put(6,""mount_pan"");put(7,""mount_tilt"");put(8,""mount_roll"");put(9,""mount_open"");put(10,""camera_trigger"");put(11,""release"");put(12,""mount2_pan"");put(13,""mount2_tilt"");put(14,""mount2_roll"");put(15,""mount2_open"");put(16,""DifferentialSpoiler1"");put(17,""DifferentialSpoiler2"");put(18,""AileronWithInput"");put(19,""Elevator"");put(20,""ElevatorWithInput"");put(21,""Rudder"");put(24,""Flaperon1"");put(25,""Flaperon2"");put(26,""GroundSteering"");put(27,""Parachute"");put(28,""EPM"");put(29,""LandingGear"");put(30,""EngineRunEnable"");put(31,""HeliRSC"");put(32,""HeliTailRSC"");put(33,""Motor1"");put(34,""Motor2"");put(35,""Motor3"");put(36,""Motor4"");put(37,""Motor5"");put(38,""Motor6"");put(39,""Motor7"");put(40,""Motor8"");put(51,""RCIN1"");put(52,""RCIN2"");put(53,""RCIN3"");put(54,""RCIN4"");put(55,""RCIN5"");put(56,""RCIN6"");put(57,""RCIN7"");put(58,""RCIN8"");put(59,""RCIN9"");put(60,""RCIN10"");put(61,""RCIN11"");put(62,""RCIN12"");put(63,""RCIN13"");put(64,""RCIN14"");put(65,""RCIN15"");put(66,""RCIN16"");put(67,""Ignition"");put(68,""Choke"");put(69,""Starter"");put(70,""Throttle"");}};,true,"""",""Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function""),"
RC6_MAX,1985,,PWM,800 2200,FALSE,,"RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1985,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC6_MAX(1985,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC6_MIN,992,,PWM,800 2200,FALSE,,"RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",992,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC6_MIN(992,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC6_REV,1,,List,-1:Reversed 1:Normal,FALSE,,Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.,1,1,MAV_PARAM_UNIT.List,"-1:Reversed,1:Normal",true,"RC6_REV(1,1,MAV_PARAM_UNIT.List,-1:Reversed,1:Normal,true,"""",""Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.""),"
RC6_TRIM,992,,PWM,800 2200,FALSE,,"RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",992,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC6_TRIM(992,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC7_DZ,0,,PWM,0 200,FALSE,,dead zone around trim or bottom,0,1,MAV_PARAM_UNIT.PWM,"0,200",true,"RC7_DZ(0,1,MAV_PARAM_UNIT.PWM,0,200,true,"""",""dead zone around trim or bottom""),"
RC7_FUNCTION,0,,List,0:Disabled 1:RCPassThru 2:Flap 3:Flap_auto 4:Aileron 6:mount_pan 7:mount_tilt 8:mount_roll 9:mount_open 10:camera_trigger 11:release 12:mount2_pan 13:mount2_tilt 14:mount2_roll 15:mount2_open 16:DifferentialSpoiler1 17:DifferentialSpoiler2 18:AileronWithInput 19:Elevator 20:ElevatorWithInput 21:Rudder 24:Flaperon1 25:Flaperon2 26:GroundSteering 27:Parachute 28:EPM 29:LandingGear 30:EngineRunEnable 31:HeliRSC 32:HeliTailRSC 33:Motor1 34:Motor2 35:Motor3 36:Motor4 37:Motor5 38:Motor6 39:Motor7 40:Motor8 51:RCIN1 52:RCIN2 53:RCIN3 54:RCIN4 55:RCIN5 56:RCIN6 57:RCIN7 58:RCIN8 59:RCIN9 60:RCIN10 61:RCIN11 62:RCIN12 63:RCIN13 64:RCIN14 65:RCIN15 66:RCIN16 67:Ignition 68:Choke 69:Starter 70:Throttle,FALSE,,Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""RCPassThru"");put(2,""Flap"");put(3,""Flap_auto"");put(4,""Aileron"");put(6,""mount_pan"");put(7,""mount_tilt"");put(8,""mount_roll"");put(9,""mount_open"");put(10,""camera_trigger"");put(11,""release"");put(12,""mount2_pan"");put(13,""mount2_tilt"");put(14,""mount2_roll"");put(15,""mount2_open"");put(16,""DifferentialSpoiler1"");put(17,""DifferentialSpoiler2"");put(18,""AileronWithInput"");put(19,""Elevator"");put(20,""ElevatorWithInput"");put(21,""Rudder"");put(24,""Flaperon1"");put(25,""Flaperon2"");put(26,""GroundSteering"");put(27,""Parachute"");put(28,""EPM"");put(29,""LandingGear"");put(30,""EngineRunEnable"");put(31,""HeliRSC"");put(32,""HeliTailRSC"");put(33,""Motor1"");put(34,""Motor2"");put(35,""Motor3"");put(36,""Motor4"");put(37,""Motor5"");put(38,""Motor6"");put(39,""Motor7"");put(40,""Motor8"");put(51,""RCIN1"");put(52,""RCIN2"");put(53,""RCIN3"");put(54,""RCIN4"");put(55,""RCIN5"");put(56,""RCIN6"");put(57,""RCIN7"");put(58,""RCIN8"");put(59,""RCIN9"");put(60,""RCIN10"");put(61,""RCIN11"");put(62,""RCIN12"");put(63,""RCIN13"");put(64,""RCIN14"");put(65,""RCIN15"");put(66,""RCIN16"");put(67,""Ignition"");put(68,""Choke"");put(69,""Starter"");put(70,""Throttle"");}};",true,"RC7_FUNCTION(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""RCPassThru"");put(2,""Flap"");put(3,""Flap_auto"");put(4,""Aileron"");put(6,""mount_pan"");put(7,""mount_tilt"");put(8,""mount_roll"");put(9,""mount_open"");put(10,""camera_trigger"");put(11,""release"");put(12,""mount2_pan"");put(13,""mount2_tilt"");put(14,""mount2_roll"");put(15,""mount2_open"");put(16,""DifferentialSpoiler1"");put(17,""DifferentialSpoiler2"");put(18,""AileronWithInput"");put(19,""Elevator"");put(20,""ElevatorWithInput"");put(21,""Rudder"");put(24,""Flaperon1"");put(25,""Flaperon2"");put(26,""GroundSteering"");put(27,""Parachute"");put(28,""EPM"");put(29,""LandingGear"");put(30,""EngineRunEnable"");put(31,""HeliRSC"");put(32,""HeliTailRSC"");put(33,""Motor1"");put(34,""Motor2"");put(35,""Motor3"");put(36,""Motor4"");put(37,""Motor5"");put(38,""Motor6"");put(39,""Motor7"");put(40,""Motor8"");put(51,""RCIN1"");put(52,""RCIN2"");put(53,""RCIN3"");put(54,""RCIN4"");put(55,""RCIN5"");put(56,""RCIN6"");put(57,""RCIN7"");put(58,""RCIN8"");put(59,""RCIN9"");put(60,""RCIN10"");put(61,""RCIN11"");put(62,""RCIN12"");put(63,""RCIN13"");put(64,""RCIN14"");put(65,""RCIN15"");put(66,""RCIN16"");put(67,""Ignition"");put(68,""Choke"");put(69,""Starter"");put(70,""Throttle"");}};,true,"""",""Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function""),"
RC7_MAX,1900,,PWM,800 2200,FALSE,,"RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1900,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC7_MAX(1900,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC7_MIN,1100,,PWM,800 2200,FALSE,,"RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1100,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC7_MIN(1100,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC7_REV,1,,List,-1:Reversed 1:Normal,FALSE,,Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.,1,1,MAV_PARAM_UNIT.List,"-1:Reversed,1:Normal",true,"RC7_REV(1,1,MAV_PARAM_UNIT.List,-1:Reversed,1:Normal,true,"""",""Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.""),"
RC7_TRIM,1498,,PWM,800 2200,FALSE,,"RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1498,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC7_TRIM(1498,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC8_DZ,0,,PWM,0 200,FALSE,,dead zone around trim or bottom,0,1,MAV_PARAM_UNIT.PWM,"0,200",true,"RC8_DZ(0,1,MAV_PARAM_UNIT.PWM,0,200,true,"""",""dead zone around trim or bottom""),"
RC8_FUNCTION,0,,List,0:Disabled 1:RCPassThru 2:Flap 3:Flap_auto 4:Aileron 6:mount_pan 7:mount_tilt 8:mount_roll 9:mount_open 10:camera_trigger 11:release 12:mount2_pan 13:mount2_tilt 14:mount2_roll 15:mount2_open 16:DifferentialSpoiler1 17:DifferentialSpoiler2 18:AileronWithInput 19:Elevator 20:ElevatorWithInput 21:Rudder 24:Flaperon1 25:Flaperon2 26:GroundSteering 27:Parachute 28:EPM 29:LandingGear 30:EngineRunEnable 31:HeliRSC 32:HeliTailRSC 33:Motor1 34:Motor2 35:Motor3 36:Motor4 37:Motor5 38:Motor6 39:Motor7 40:Motor8 51:RCIN1 52:RCIN2 53:RCIN3 54:RCIN4 55:RCIN5 56:RCIN6 57:RCIN7 58:RCIN8 59:RCIN9 60:RCIN10 61:RCIN11 62:RCIN12 63:RCIN13 64:RCIN14 65:RCIN15 66:RCIN16 67:Ignition 68:Choke 69:Starter 70:Throttle,FALSE,,Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""RCPassThru"");put(2,""Flap"");put(3,""Flap_auto"");put(4,""Aileron"");put(6,""mount_pan"");put(7,""mount_tilt"");put(8,""mount_roll"");put(9,""mount_open"");put(10,""camera_trigger"");put(11,""release"");put(12,""mount2_pan"");put(13,""mount2_tilt"");put(14,""mount2_roll"");put(15,""mount2_open"");put(16,""DifferentialSpoiler1"");put(17,""DifferentialSpoiler2"");put(18,""AileronWithInput"");put(19,""Elevator"");put(20,""ElevatorWithInput"");put(21,""Rudder"");put(24,""Flaperon1"");put(25,""Flaperon2"");put(26,""GroundSteering"");put(27,""Parachute"");put(28,""EPM"");put(29,""LandingGear"");put(30,""EngineRunEnable"");put(31,""HeliRSC"");put(32,""HeliTailRSC"");put(33,""Motor1"");put(34,""Motor2"");put(35,""Motor3"");put(36,""Motor4"");put(37,""Motor5"");put(38,""Motor6"");put(39,""Motor7"");put(40,""Motor8"");put(51,""RCIN1"");put(52,""RCIN2"");put(53,""RCIN3"");put(54,""RCIN4"");put(55,""RCIN5"");put(56,""RCIN6"");put(57,""RCIN7"");put(58,""RCIN8"");put(59,""RCIN9"");put(60,""RCIN10"");put(61,""RCIN11"");put(62,""RCIN12"");put(63,""RCIN13"");put(64,""RCIN14"");put(65,""RCIN15"");put(66,""RCIN16"");put(67,""Ignition"");put(68,""Choke"");put(69,""Starter"");put(70,""Throttle"");}};",true,"RC8_FUNCTION(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""RCPassThru"");put(2,""Flap"");put(3,""Flap_auto"");put(4,""Aileron"");put(6,""mount_pan"");put(7,""mount_tilt"");put(8,""mount_roll"");put(9,""mount_open"");put(10,""camera_trigger"");put(11,""release"");put(12,""mount2_pan"");put(13,""mount2_tilt"");put(14,""mount2_roll"");put(15,""mount2_open"");put(16,""DifferentialSpoiler1"");put(17,""DifferentialSpoiler2"");put(18,""AileronWithInput"");put(19,""Elevator"");put(20,""ElevatorWithInput"");put(21,""Rudder"");put(24,""Flaperon1"");put(25,""Flaperon2"");put(26,""GroundSteering"");put(27,""Parachute"");put(28,""EPM"");put(29,""LandingGear"");put(30,""EngineRunEnable"");put(31,""HeliRSC"");put(32,""HeliTailRSC"");put(33,""Motor1"");put(34,""Motor2"");put(35,""Motor3"");put(36,""Motor4"");put(37,""Motor5"");put(38,""Motor6"");put(39,""Motor7"");put(40,""Motor8"");put(51,""RCIN1"");put(52,""RCIN2"");put(53,""RCIN3"");put(54,""RCIN4"");put(55,""RCIN5"");put(56,""RCIN6"");put(57,""RCIN7"");put(58,""RCIN8"");put(59,""RCIN9"");put(60,""RCIN10"");put(61,""RCIN11"");put(62,""RCIN12"");put(63,""RCIN13"");put(64,""RCIN14"");put(65,""RCIN15"");put(66,""RCIN16"");put(67,""Ignition"");put(68,""Choke"");put(69,""Starter"");put(70,""Throttle"");}};,true,"""",""Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function""),"
RC8_MAX,1900,,PWM,800 2200,FALSE,,"RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1900,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC8_MAX(1900,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC8_MIN,1100,,PWM,800 2200,FALSE,,"RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1100,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC8_MIN(1100,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RC8_REV,1,,List,-1:Reversed 1:Normal,FALSE,,Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.,1,1,MAV_PARAM_UNIT.List,"-1:Reversed,1:Normal",true,"RC8_REV(1,1,MAV_PARAM_UNIT.List,-1:Reversed,1:Normal,true,"""",""Reverse servo operation. Set to 1 for normal (forward) operation. Set to -1 to reverse this channel.""),"
RC8_TRIM,1498,,PWM,800 2200,FALSE,,"RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",1498,1,MAV_PARAM_UNIT.PWM,"800,2200",true,"RC8_TRIM(1498,1,MAV_PARAM_UNIT.PWM,800,2200,true,"""",""RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.""),"
RCMAP_PITCH,2,,43473,,FALSE,,"Pitch channel number. This is useful when you have a RC transmitter that can't change the channel order easily. Pitch is normally on channel 2, but you can move it to any channel with this parameter. Reboot is required for changes to take effect.",2,1,MAV_PARAM_UNIT.43473,null,true,"RCMAP_PITCH(2,1,MAV_PARAM_UNIT.43473,null,true,"""",""Pitch channel number. This is useful when you have a RC transmitter that can't change the channel order easily. Pitch is normally on channel 2, but you can move it to any channel with this parameter. Reboot is required for changes to take effect.""),"
RCMAP_ROLL,1,,43473,,FALSE,,"Roll channel number. This is useful when you have a RC transmitter that can't change the channel order easily. Roll is normally on channel 1, but you can move it to any channel with this parameter. Reboot is required for changes to take effect.",1,1,MAV_PARAM_UNIT.43473,null,true,"RCMAP_ROLL(1,1,MAV_PARAM_UNIT.43473,null,true,"""",""Roll channel number. This is useful when you have a RC transmitter that can't change the channel order easily. Roll is normally on channel 1, but you can move it to any channel with this parameter. Reboot is required for changes to take effect.""),"
RCMAP_THROTTLE,3,,43473,,FALSE,,"Throttle channel number. This is useful when you have a RC transmitter that can't change the channel order easily. Throttle is normally on channel 3, but you can move it to any channel with this parameter. Warning APM 2.X: Changing the throttle channel could produce unexpected fail-safe results if connection between receiver and on-board PPM Encoder is lost. Disabling on-board PPM Encoder is recommended. Reboot is required for changes to take effect.",3,1,MAV_PARAM_UNIT.43473,null,true,"RCMAP_THROTTLE(3,1,MAV_PARAM_UNIT.43473,null,true,"""",""Throttle channel number. This is useful when you have a RC transmitter that can't change the channel order easily. Throttle is normally on channel 3, but you can move it to any channel with this parameter. Warning APM 2.X: Changing the throttle channel could produce unexpected fail-safe results if connection between receiver and on-board PPM Encoder is lost. Disabling on-board PPM Encoder is recommended. Reboot is required for changes to take effect.""),"
RCMAP_YAW,4,,43473,,FALSE,,"Yaw channel number. This is useful when you have a RC transmitter that can't change the channel order easily. Yaw (also known as rudder) is normally on channel 4, but you can move it to any channel with this parameter. Reboot is required for changes to take effect.",4,1,MAV_PARAM_UNIT.43473,null,true,"RCMAP_YAW(4,1,MAV_PARAM_UNIT.43473,null,true,"""",""Yaw channel number. This is useful when you have a RC transmitter that can't change the channel order easily. Yaw (also known as rudder) is normally on channel 4, but you can move it to any channel with this parameter. Reboot is required for changes to take effect.""),"
RELAY_PIN,13,,List,-1:Disabled 13:APM2 A9 pin 47:APM1 relay 50:Pixhawk AUXOUT1 51:Pixhawk AUXOUT2 52:Pixhawk AUXOUT3 53:Pixhawk AUXOUT4 54:Pixhawk AUXOUT5 55:Pixhawk AUXOUT6 111:PX4 FMU Relay1 112:PX4 FMU Relay2 113:PX4IO Relay1 114:PX4IO Relay2 115:PX4IO ACC1 116:PX4IO ACC2,FALSE,,Digital pin number for first relay control. This is the pin used for camera control.,13,1,MAV_PARAM_UNIT.List,"-1:Disabled,13:APM2,A9,pin,47:APM1,relay,50:Pixhawk,AUXOUT1,51:Pixhawk,AUXOUT2,52:Pixhawk,AUXOUT3,53:Pixhawk,AUXOUT4,54:Pixhawk,AUXOUT5,55:Pixhawk,AUXOUT6,111:PX4,FMU,Relay1,112:PX4,FMU,Relay2,113:PX4IO,Relay1,114:PX4IO,Relay2,115:PX4IO,ACC1,116:PX4IO,ACC2",true,"RELAY_PIN(13,1,MAV_PARAM_UNIT.List,-1:Disabled,13:APM2,A9,pin,47:APM1,relay,50:Pixhawk,AUXOUT1,51:Pixhawk,AUXOUT2,52:Pixhawk,AUXOUT3,53:Pixhawk,AUXOUT4,54:Pixhawk,AUXOUT5,55:Pixhawk,AUXOUT6,111:PX4,FMU,Relay1,112:PX4,FMU,Relay2,113:PX4IO,Relay1,114:PX4IO,Relay2,115:PX4IO,ACC1,116:PX4IO,ACC2,true,"""",""Digital pin number for first relay control. This is the pin used for camera control.""),"
RELAY_PIN2,-1,,List,-1:Disabled 13:APM2 A9 pin 47:APM1 relay 50:Pixhawk AUXOUT1 51:Pixhawk AUXOUT2 52:Pixhawk AUXOUT3 53:Pixhawk AUXOUT4 54:Pixhawk AUXOUT5 55:Pixhawk AUXOUT6 111:PX4 FMU Relay1 112:PX4 FMU Relay2 113:PX4IO Relay1 114:PX4IO Relay2 115:PX4IO ACC1 116:PX4IO ACC2,FALSE,,Digital pin number for 2nd relay control.,-1,1,MAV_PARAM_UNIT.List,"-1:Disabled,13:APM2,A9,pin,47:APM1,relay,50:Pixhawk,AUXOUT1,51:Pixhawk,AUXOUT2,52:Pixhawk,AUXOUT3,53:Pixhawk,AUXOUT4,54:Pixhawk,AUXOUT5,55:Pixhawk,AUXOUT6,111:PX4,FMU,Relay1,112:PX4,FMU,Relay2,113:PX4IO,Relay1,114:PX4IO,Relay2,115:PX4IO,ACC1,116:PX4IO,ACC2",true,"RELAY_PIN2(-1,1,MAV_PARAM_UNIT.List,-1:Disabled,13:APM2,A9,pin,47:APM1,relay,50:Pixhawk,AUXOUT1,51:Pixhawk,AUXOUT2,52:Pixhawk,AUXOUT3,53:Pixhawk,AUXOUT4,54:Pixhawk,AUXOUT5,55:Pixhawk,AUXOUT6,111:PX4,FMU,Relay1,112:PX4,FMU,Relay2,113:PX4IO,Relay1,114:PX4IO,Relay2,115:PX4IO,ACC1,116:PX4IO,ACC2,true,"""",""Digital pin number for 2nd relay control.""),"
RNGFND_FUNCTION,0,,List,0:Linear 1:Inverted 2:Hyperbolic,FALSE,,"Control over what function is used to calculate distance. For a linear function, the distance is (voltage-offset)*scaling. For a inverted function the distance is (offset-voltage)*scaling. For a hyperbolic function the distance is scaling/(voltage-offset). The functions return the distance in meters.",0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Linear"");put(1,""Inverted"");put(2,""Hyperbolic"");}};",true,"RNGFND_FUNCTION(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Linear"");put(1,""Inverted"");put(2,""Hyperbolic"");}};,true,"""",""Control over what function is used to calculate distance. For a linear function, the distance is (voltage-offset)*scaling. For a inverted function the distance is (offset-voltage)*scaling. For a hyperbolic function the distance is scaling/(voltage-offset). The functions return the distance in meters.""),"
RNGFND_GAIN,0.8,,,0.01 2.0,FALSE,,Used to adjust the speed with which the target altitude is changed when objects are sensed below the copter,0.8,1,MAV_PARAM_UNIT.UNKNOWN,"0.01,2.0",true,"RNGFND_GAIN(0.8,1,MAV_PARAM_UNIT.UNKNOWN,0.01,2.0,true,"""",""Used to adjust the speed with which the target altitude is changed when objects are sensed below the copter""),"
RNGFND_MAX_CM,700,,Centimeters,,FALSE,,Maximum distance in centimeters that rangefinder can reliably read,700,1,MAV_PARAM_UNIT.Centimeters,null,true,"RNGFND_MAX_CM(700,1,MAV_PARAM_UNIT.Centimeters,null,true,"""",""Maximum distance in centimeters that rangefinder can reliably read""),"
RNGFND_MIN_CM,20,,Centimeters,,FALSE,,Minimum distance in centimeters that rangefinder can reliably read,20,1,MAV_PARAM_UNIT.Centimeters,null,true,"RNGFND_MIN_CM(20,1,MAV_PARAM_UNIT.Centimeters,null,true,"""",""Minimum distance in centimeters that rangefinder can reliably read""),"
RNGFND_OFFSET,0,,Volts,,FALSE,,Offset in volts for zero distance for analog rangefinders. Offset added to distance in centimeters for PWM and I2C Lidars,0,1,MAV_PARAM_UNIT.Volts,null,true,"RNGFND_OFFSET(0,1,MAV_PARAM_UNIT.Volts,null,true,"""",""Offset in volts for zero distance for analog rangefinders. Offset added to distance in centimeters for PWM and I2C Lidars""),"
RNGFND_PIN,-1,,List,-1:Not Used 0:APM2-A0 1:APM2-A1 2:APM2-A2 3:APM2-A3 4:APM2-A4 5:APM2-A5 6:APM2-A6 7:APM2-A7 8:APM2-A8 9:APM2-A9 11:PX4-airspeed port 15:Pixhawk-airspeed port 64:APM1-airspeed port,FALSE,,Analog pin that rangefinder is connected to. Set this to 0..9 for the APM2 analog pins. Set to 64 on an APM1 for the dedicated 'airspeed' port on the end of the board. Set to 11 on PX4 for the analog 'airspeed' port. Set to 15 on the Pixhawk for the analog 'airspeed' port.,-1,1,MAV_PARAM_UNIT.List,"-1:Not,Used,0:APM2-A0,1:APM2-A1,2:APM2-A2,3:APM2-A3,4:APM2-A4,5:APM2-A5,6:APM2-A6,7:APM2-A7,8:APM2-A8,9:APM2-A9,11:PX4-airspeed,port,15:Pixhawk-airspeed,port,64:APM1-airspeed,port",true,"RNGFND_PIN(-1,1,MAV_PARAM_UNIT.List,-1:Not,Used,0:APM2-A0,1:APM2-A1,2:APM2-A2,3:APM2-A3,4:APM2-A4,5:APM2-A5,6:APM2-A6,7:APM2-A7,8:APM2-A8,9:APM2-A9,11:PX4-airspeed,port,15:Pixhawk-airspeed,port,64:APM1-airspeed,port,true,"""",""Analog pin that rangefinder is connected to. Set this to 0..9 for the APM2 analog pins. Set to 64 on an APM1 for the dedicated 'airspeed' port on the end of the board. Set to 11 on PX4 for the analog 'airspeed' port. Set to 15 on the Pixhawk for the analog 'airspeed' port.""),"
RNGFND_RMETRIC,1,,List,0:No 1:Yes,FALSE,,"This parameter sets whether an analog rangefinder is ratiometric. Most analog rangefinders are ratiometric, meaning that their output voltage is influenced by the supply voltage. Some analog rangefinders (such as the SF/02) have their own internal voltage regulators so they are not ratiometric.",1,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""No"");put(1,""Yes"");}};",true,"RNGFND_RMETRIC(1,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""No"");put(1,""Yes"");}};,true,"""",""This parameter sets whether an analog rangefinder is ratiometric. Most analog rangefinders are ratiometric, meaning that their output voltage is influenced by the supply voltage. Some analog rangefinders (such as the SF/02) have their own internal voltage regulators so they are not ratiometric.""),"
RNGFND_SCALING,3,,meters/Volt,,FALSE,,Scaling factor between rangefinder reading and distance. For the linear and inverted functions this is in meters per volt. For the hyperbolic function the units are meterVolts.,3,1,MAV_PARAM_UNIT.meters_Volt,null,true,"RNGFND_SCALING(3,1,MAV_PARAM_UNIT.meters_Volt,null,true,"""",""Scaling factor between rangefinder reading and distance. For the linear and inverted functions this is in meters per volt. For the hyperbolic function the units are meterVolts.""),"
RNGFND_SETTLE_MS,0,,,,FALSE,,Coming soon,0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RNGFND_SETTLE_MS(0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RNGFND_STOP_PIN,-1,,List,-1:Not Used 50:Pixhawk AUXOUT1 51:Pixhawk AUXOUT2 52:Pixhawk AUXOUT3 53:Pixhawk AUXOUT4 54:Pixhawk AUXOUT5 55:Pixhawk AUXOUT6 111:PX4 FMU Relay1 112:PX4 FMU Relay2 113:PX4IO Relay1 114:PX4IO Relay2 115:PX4IO ACC1 116:PX4IO ACC2,FALSE,,"Digital pin that enables/disables rangefinder measurement for an analog rangefinder. A value of -1 means no pin. If this is set, then the pin is set to 1 to enable the rangefinder and set to 0 to disable it. This can be used to ensure that multiple sonar rangefinders don't interfere with each other.",-1,1,MAV_PARAM_UNIT.List,"-1:Not,Used,50:Pixhawk,AUXOUT1,51:Pixhawk,AUXOUT2,52:Pixhawk,AUXOUT3,53:Pixhawk,AUXOUT4,54:Pixhawk,AUXOUT5,55:Pixhawk,AUXOUT6,111:PX4,FMU,Relay1,112:PX4,FMU,Relay2,113:PX4IO,Relay1,114:PX4IO,Relay2,115:PX4IO,ACC1,116:PX4IO,ACC2",true,"RNGFND_STOP_PIN(-1,1,MAV_PARAM_UNIT.List,-1:Not,Used,50:Pixhawk,AUXOUT1,51:Pixhawk,AUXOUT2,52:Pixhawk,AUXOUT3,53:Pixhawk,AUXOUT4,54:Pixhawk,AUXOUT5,55:Pixhawk,AUXOUT6,111:PX4,FMU,Relay1,112:PX4,FMU,Relay2,113:PX4IO,Relay1,114:PX4IO,Relay2,115:PX4IO,ACC1,116:PX4IO,ACC2,true,"""",""Digital pin that enables/disables rangefinder measurement for an analog rangefinder. A value of -1 means no pin. If this is set, then the pin is set to 1 to enable the rangefinder and set to 0 to disable it. This can be used to ensure that multiple sonar rangefinders don't interfere with each other.""),"
RNGFND_TYPE,0,,List,0:None 1:Analog 2:APM2-MaxbotixI2C 3:APM2-PulsedLightI2C 4:PX4-I2C 5:PX4-PWM 6:BBB-PRU 7:LightWareI2C 8:LightWareSerial 9:Bebop 10:MAVLink 12:LeddarOne,FALSE,,What type of rangefinder device that is connected,0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""None"");put(1,""Analog"");put(2,""APM2-MaxbotixI2C"");put(3,""APM2-PulsedLightI2C"");put(4,""PX4-I2C"");put(5,""PX4-PWM"");put(6,""BBB-PRU"");put(7,""LightWareI2C"");put(8,""LightWareSerial"");put(9,""Bebop"");put(10,""MAVLink"");put(12,""LeddarOne"");}};",true,"RNGFND_TYPE(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""None"");put(1,""Analog"");put(2,""APM2-MaxbotixI2C"");put(3,""APM2-PulsedLightI2C"");put(4,""PX4-I2C"");put(5,""PX4-PWM"");put(6,""BBB-PRU"");put(7,""LightWareI2C"");put(8,""LightWareSerial"");put(9,""Bebop"");put(10,""MAVLink"");put(12,""LeddarOne"");}};,true,"""",""What type of rangefinder device that is connected""),"
RSSI_PIN,-1,,,,FALSE,,Coming soon,-1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RSSI_PIN(-1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RSSI_RANGE,5,,,,FALSE,,Coming soon,5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"RSSI_RANGE(5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
RTL_ALT,1500,,Centimeters,0 8000,FALSE,,The minimum relative altitude the model will move to before Returning to Launch. Set to zero to return at current altitude.,1500,1,MAV_PARAM_UNIT.Centimeters,"0,8000",true,"RTL_ALT(1500,1,MAV_PARAM_UNIT.Centimeters,0,8000,true,"""",""The minimum relative altitude the model will move to before Returning to Launch. Set to zero to return at current altitude.""),"
RTL_ALT_FINAL,0,,Centimeters,-1 1000,FALSE,,This is the altitude the vehicle will move to as the final stage of Returning to Launch or after completing a mission. Set to zero to land.,0,1,MAV_PARAM_UNIT.Centimeters,"-1,1000",true,"RTL_ALT_FINAL(0,1,MAV_PARAM_UNIT.Centimeters,-1,1000,true,"""",""This is the altitude the vehicle will move to as the final stage of Returning to Launch or after completing a mission. Set to zero to land.""),"
RTL_LOIT_TIME,5000,,ms,0 60000,FALSE,,Time (in milliseconds) to loiter above home before beginning final descent,5000,1,MAV_PARAM_UNIT.ms,"0,60000",true,"RTL_LOIT_TIME(5000,1,MAV_PARAM_UNIT.ms,0,60000,true,"""",""Time (in milliseconds) to loiter above home before beginning final descent""),"
SCHED_DEBUG,0,,List,0:Disabled 2:ShowSlips 3:ShowOverruns,FALSE,,"Set to non-zero to enable scheduler debug messages. When set to show ""Slips"" the scheduler will display a message whenever a scheduled task is delayed due to too much CPU load. When set to ShowOverruns the scheduled will display a message whenever a task takes longer than the limit promised in the task table.",0,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(2,""ShowSlips"");put(3,""ShowOverruns"");}};",true,"SCHED_DEBUG(0,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(2,""ShowSlips"");put(3,""ShowOverruns"");}};,true,"""",""Set to non-zero to enable scheduler debug messages. When set to show ""Slips"" the scheduler will display a message whenever a scheduled task is delayed due to too much CPU load. When set to ShowOverruns the scheduled will display a message whenever a task takes longer than the limit promised in the task table.""),"
SERIAL0_BAUD,115,,List,1:1200 2:2400 4:4800 9:9600 19:19200 38:38400 57:57600 111:111100 115:115200 500:500000 921:921600 1500:1500000,FALSE,,"The baud rate used on the USB console. The APM2 can support all baudrates up to 115, and also can support 500. The PX4 can support rates of up to 1500. If you setup a rate you cannot support on APM2 and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.",115,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(1,""1200"");put(2,""2400"");put(4,""4800"");put(9,""9600"");put(19,""19200"");put(38,""38400"");put(57,""57600"");put(111,""111100"");put(115,""115200"");put(500,""500000"");put(921,""921600"");put(1500,""1500000"");}};",true,"SERIAL0_BAUD(115,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(1,""1200"");put(2,""2400"");put(4,""4800"");put(9,""9600"");put(19,""19200"");put(38,""38400"");put(57,""57600"");put(111,""111100"");put(115,""115200"");put(500,""500000"");put(921,""921600"");put(1500,""1500000"");}};,true,"""",""The baud rate used on the USB console. The APM2 can support all baudrates up to 115, and also can support 500. The PX4 can support rates of up to 1500. If you setup a rate you cannot support on APM2 and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.""),"
SERIAL1_BAUD,57,,List,1:1200 2:2400 4:4800 9:9600 19:19200 38:38400 57:57600 111:111100 115:115200 500:500000 921:921600 1500:1500000,FALSE,,"The baud rate used on the Telem1 port. The APM2 can support all baudrates up to 115, and also can support 500. The PX4 can support rates of up to 1500. If you setup a rate you cannot support on APM2 and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.",57,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(1,""1200"");put(2,""2400"");put(4,""4800"");put(9,""9600"");put(19,""19200"");put(38,""38400"");put(57,""57600"");put(111,""111100"");put(115,""115200"");put(500,""500000"");put(921,""921600"");put(1500,""1500000"");}};",true,"SERIAL1_BAUD(57,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(1,""1200"");put(2,""2400"");put(4,""4800"");put(9,""9600"");put(19,""19200"");put(38,""38400"");put(57,""57600"");put(111,""111100"");put(115,""115200"");put(500,""500000"");put(921,""921600"");put(1500,""1500000"");}};,true,"""",""The baud rate used on the Telem1 port. The APM2 can support all baudrates up to 115, and also can support 500. The PX4 can support rates of up to 1500. If you setup a rate you cannot support on APM2 and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.""),"
SIMPLE,18,,,,FALSE,,Bitmask which holds which flight modes use simple heading mode (eg bit 0 = 1 means Flight Mode 0 uses simple mode),18,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"SIMPLE(18,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Bitmask which holds which flight modes use simple heading mode (eg bit 0 = 1 means Flight Mode 0 uses simple mode)""),"
SR0_EXT_STAT,2,,Hz,0 10,FALSE,,"Stream rate of SYS_STATUS, MEMINFO, MISSION_CURRENT, GPS_RAW_INT, NAV_CONTROLLER_OUTPUT, and LIMITS_STATUS to ground station",2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR0_EXT_STAT(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of SYS_STATUS, MEMINFO, MISSION_CURRENT, GPS_RAW_INT, NAV_CONTROLLER_OUTPUT, and LIMITS_STATUS to ground station""),"
SR0_EXTRA1,4,,Hz,0 10,FALSE,,Stream rate of ATTITUDE and SIMSTATE (SITL only) to ground station,4,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR0_EXTRA1(4,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of ATTITUDE and SIMSTATE (SITL only) to ground station""),"
SR0_EXTRA2,4,,Hz,0 10,FALSE,,Stream rate of VFR_HUD to ground station,4,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR0_EXTRA2(4,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of VFR_HUD to ground station""),"
SR0_EXTRA3,2,,Hz,0 10,FALSE,,"Stream rate of AHRS, HWSTATUS, and SYSTEM_TIME to ground station",2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR0_EXTRA3(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of AHRS, HWSTATUS, and SYSTEM_TIME to ground station""),"
SR0_PARAMS,10,,Hz,0 10,FALSE,,Stream rate of PARAM_VALUE to ground station,10,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR0_PARAMS(10,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of PARAM_VALUE to ground station""),"
SR0_POSITION,2,,Hz,0 10,FALSE,,Stream rate of GLOBAL_POSITION_INT to ground station,2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR0_POSITION(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of GLOBAL_POSITION_INT to ground station""),"
SR0_RAW_CTRL,1,,Hz,0 10,FALSE,,Stream rate of RC_CHANNELS_SCALED (HIL only) to ground station,1,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR0_RAW_CTRL(1,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of RC_CHANNELS_SCALED (HIL only) to ground station""),"
SR0_RAW_SENS,2,,Hz,0 10,FALSE,,"Stream rate of RAW_IMU, SCALED_IMU2, SCALED_PRESSURE, and SENSOR_OFFSETS to ground station",2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR0_RAW_SENS(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of RAW_IMU, SCALED_IMU2, SCALED_PRESSURE, and SENSOR_OFFSETS to ground station""),"
SR0_RC_CHAN,2,,Hz,0 10,FALSE,,Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS to ground station,2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR0_RC_CHAN(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS to ground station""),"
SR1_EXT_STAT,2,,Hz,0 10,FALSE,,"Stream rate of SYS_STATUS, MEMINFO, MISSION_CURRENT, GPS_RAW_INT, NAV_CONTROLLER_OUTPUT, and LIMITS_STATUS to ground station",2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR1_EXT_STAT(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of SYS_STATUS, MEMINFO, MISSION_CURRENT, GPS_RAW_INT, NAV_CONTROLLER_OUTPUT, and LIMITS_STATUS to ground station""),"
SR1_EXTRA1,2,,Hz,0 10,FALSE,,Stream rate of ATTITUDE and SIMSTATE (SITL only) to ground station,2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR1_EXTRA1(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of ATTITUDE and SIMSTATE (SITL only) to ground station""),"
SR1_EXTRA2,2,,Hz,0 10,FALSE,,Stream rate of VFR_HUD to ground station,2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR1_EXTRA2(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of VFR_HUD to ground station""),"
SR1_EXTRA3,2,,Hz,0 10,FALSE,,"Stream rate of AHRS, HWSTATUS, and SYSTEM_TIME to ground station",2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR1_EXTRA3(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of AHRS, HWSTATUS, and SYSTEM_TIME to ground station""),"
SR1_PARAMS,0,,Hz,0 10,FALSE,,Stream rate of PARAM_VALUE to ground station,0,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR1_PARAMS(0,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of PARAM_VALUE to ground station""),"
SR1_POSITION,2,,Hz,0 10,FALSE,,Stream rate of GLOBAL_POSITION_INT to ground station,2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR1_POSITION(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of GLOBAL_POSITION_INT to ground station""),"
SR1_RAW_CTRL,2,,Hz,0 10,FALSE,,Stream rate of RC_CHANNELS_SCALED (HIL only) to ground station,2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR1_RAW_CTRL(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of RC_CHANNELS_SCALED (HIL only) to ground station""),"
SR1_RAW_SENS,2,,Hz,0 10,FALSE,,"Stream rate of RAW_IMU, SCALED_IMU2, SCALED_PRESSURE, and SENSOR_OFFSETS to ground station",2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR1_RAW_SENS(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of RAW_IMU, SCALED_IMU2, SCALED_PRESSURE, and SENSOR_OFFSETS to ground station""),"
SR1_RC_CHAN,2,,Hz,0 10,FALSE,,Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS to ground station,2,1,MAV_PARAM_UNIT.Hz,"0,10",true,"SR1_RC_CHAN(2,1,MAV_PARAM_UNIT.Hz,0,10,true,"""",""Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS to ground station""),"
STB_PIT_P,0.016,,,,FALSE,,Coming soon,0.016,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"STB_PIT_P(0.016,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
STB_RLL_P,0.016,,,,FALSE,,Coming soon,0.016,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"STB_RLL_P(0.016,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
STB_YAW_P,4,,,,FALSE,,Coming soon,4,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"STB_YAW_P(4,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
SUPER_SIMPLE,5,,List,0:Disabled 1:Mode1 2:Mode2 3:Mode1+2 4:Mode3 5:Mode1+3 6:Mode2+3 7:Mode1+2+3 8:Mode4 9:Mode1+4 10:Mode2+4 11:Mode1+2+4 12:Mode3+4 13:Mode1+3+4 14:Mode2+3+4 15:Mode1+2+3+4 16:Mode5 17:Mode1+5 18:Mode2+5 19:Mode1+2+5 20:Mode3+5 21:Mode1+3+5 22:Mode2+3+5 23:Mode1+2+3+5 24:Mode4+5 25:Mode1+4+5 26:Mode2+4+5 27:Mode1+2+4+5 28:Mode3+4+5 29:Mode1+3+4+5 30:Mode2+3+4+5 31:Mode1+2+3+4+5 32:Mode6 33:Mode1+6 34:Mode2+6 35:Mode1+2+6 36:Mode3+6 37:Mode1+3+6 38:Mode2+3+6 39:Mode1+2+3+6 40:Mode4+6 41:Mode1+4+6 42:Mode2+4+6 43:Mode1+2+4+6 44:Mode3+4+6 45:Mode1+3+4+6 46:Mode2+3+4+6 47:Mode1+2+3+4+6 48:Mode5+6 49:Mode1+5+6 50:Mode2+5+6 51:Mode1+2+5+6 52:Mode3+5+6 53:Mode1+3+5+6 54:Mode2+3+5+6 55:Mode1+2+3+5+6 56:Mode4+5+6 57:Mode1+4+5+6 58:Mode2+4+5+6 59:Mode1+2+4+5+6 60:Mode3+4+5+6 61:Mode1+3+4+5+6 62:Mode2+3+4+5+6 63:Mode1+2+3+4+5+6,FALSE,,Bitmask to enable Super Simple mode for some flight modes. Setting this to Disabled(0) will disable Super Simple Mode,5,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Mode1"");put(2,""Mode2"");put(3,""Mode1+2"");put(4,""Mode3"");put(5,""Mode1+3"");put(6,""Mode2+3"");put(7,""Mode1+2+3"");put(8,""Mode4"");put(9,""Mode1+4"");put(10,""Mode2+4"");put(11,""Mode1+2+4"");put(12,""Mode3+4"");put(13,""Mode1+3+4"");put(14,""Mode2+3+4"");put(15,""Mode1+2+3+4"");put(16,""Mode5"");put(17,""Mode1+5"");put(18,""Mode2+5"");put(19,""Mode1+2+5"");put(20,""Mode3+5"");put(21,""Mode1+3+5"");put(22,""Mode2+3+5"");put(23,""Mode1+2+3+5"");put(24,""Mode4+5"");put(25,""Mode1+4+5"");put(26,""Mode2+4+5"");put(27,""Mode1+2+4+5"");put(28,""Mode3+4+5"");put(29,""Mode1+3+4+5"");put(30,""Mode2+3+4+5"");put(31,""Mode1+2+3+4+5"");put(32,""Mode6"");put(33,""Mode1+6"");put(34,""Mode2+6"");put(35,""Mode1+2+6"");put(36,""Mode3+6"");put(37,""Mode1+3+6"");put(38,""Mode2+3+6"");put(39,""Mode1+2+3+6"");put(40,""Mode4+6"");put(41,""Mode1+4+6"");put(42,""Mode2+4+6"");put(43,""Mode1+2+4+6"");put(44,""Mode3+4+6"");put(45,""Mode1+3+4+6"");put(46,""Mode2+3+4+6"");put(47,""Mode1+2+3+4+6"");put(48,""Mode5+6"");put(49,""Mode1+5+6"");put(50,""Mode2+5+6"");put(51,""Mode1+2+5+6"");put(52,""Mode3+5+6"");put(53,""Mode1+3+5+6"");put(54,""Mode2+3+5+6"");put(55,""Mode1+2+3+5+6"");put(56,""Mode4+5+6"");put(57,""Mode1+4+5+6"");put(58,""Mode2+4+5+6"");put(59,""Mode1+2+4+5+6"");put(60,""Mode3+4+5+6"");put(61,""Mode1+3+4+5+6"");put(62,""Mode2+3+4+5+6"");put(63,""Mode1+2+3+4+5+6"");}};",true,"SUPER_SIMPLE(5,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""Disabled"");put(1,""Mode1"");put(2,""Mode2"");put(3,""Mode1+2"");put(4,""Mode3"");put(5,""Mode1+3"");put(6,""Mode2+3"");put(7,""Mode1+2+3"");put(8,""Mode4"");put(9,""Mode1+4"");put(10,""Mode2+4"");put(11,""Mode1+2+4"");put(12,""Mode3+4"");put(13,""Mode1+3+4"");put(14,""Mode2+3+4"");put(15,""Mode1+2+3+4"");put(16,""Mode5"");put(17,""Mode1+5"");put(18,""Mode2+5"");put(19,""Mode1+2+5"");put(20,""Mode3+5"");put(21,""Mode1+3+5"");put(22,""Mode2+3+5"");put(23,""Mode1+2+3+5"");put(24,""Mode4+5"");put(25,""Mode1+4+5"");put(26,""Mode2+4+5"");put(27,""Mode1+2+4+5"");put(28,""Mode3+4+5"");put(29,""Mode1+3+4+5"");put(30,""Mode2+3+4+5"");put(31,""Mode1+2+3+4+5"");put(32,""Mode6"");put(33,""Mode1+6"");put(34,""Mode2+6"");put(35,""Mode1+2+6"");put(36,""Mode3+6"");put(37,""Mode1+3+6"");put(38,""Mode2+3+6"");put(39,""Mode1+2+3+6"");put(40,""Mode4+6"");put(41,""Mode1+4+6"");put(42,""Mode2+4+6"");put(43,""Mode1+2+4+6"");put(44,""Mode3+4+6"");put(45,""Mode1+3+4+6"");put(46,""Mode2+3+4+6"");put(47,""Mode1+2+3+4+6"");put(48,""Mode5+6"");put(49,""Mode1+5+6"");put(50,""Mode2+5+6"");put(51,""Mode1+2+5+6"");put(52,""Mode3+5+6"");put(53,""Mode1+3+5+6"");put(54,""Mode2+3+5+6"");put(55,""Mode1+2+3+5+6"");put(56,""Mode4+5+6"");put(57,""Mode1+4+5+6"");put(58,""Mode2+4+5+6"");put(59,""Mode1+2+4+5+6"");put(60,""Mode3+4+5+6"");put(61,""Mode1+3+4+5+6"");put(62,""Mode2+3+4+5+6"");put(63,""Mode1+2+3+4+5+6"");}};,true,"""",""Bitmask to enable Super Simple mode for some flight modes. Setting this to Disabled(0) will disable Super Simple Mode""),"
SYSID_MYGCS,255,,List,255:Mission Planner and DroidPlanner 252: AP Planner 2,FALSE,,Allows restricting radio overrides to only come from my ground station,255,1,MAV_PARAM_UNIT.List,"255:Mission,Planner,and,DroidPlanner,252:,AP,Planner,2",true,"SYSID_MYGCS(255,1,MAV_PARAM_UNIT.List,255:Mission,Planner,and,DroidPlanner,252:,AP,Planner,2,true,"""",""Allows restricting radio overrides to only come from my ground station""),"
SYSID_SW_MREV,120,,,,TRUE,Eeprom format version number,This value is incremented when changes are made to the eeprom format,120,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"SYSID_SW_MREV(120,1,MAV_PARAM_UNIT.UNKNOWN,null,true,""Eeprom format version number"",""This value is incremented when changes are made to the eeprom format""),"
SYSID_SW_TYPE,10,,List,0:ArduPlane 4:AntennaTracker 10:Copter 20:Rover,FALSE,,This is used by the ground station to recognise the software type (eg ArduPlane vs ArduCopter),10,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""ArduPlane"");put(4,""AntennaTracker"");put(10,""Copter"");put(20,""Rover"");}};",true,"SYSID_SW_TYPE(10,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""ArduPlane"");put(4,""AntennaTracker"");put(10,""Copter"");put(20,""Rover"");}};,true,"""",""This is used by the ground station to recognise the software type (eg ArduPlane vs ArduCopter)""),"
SYSID_THISMAV,1,,,1 255,FALSE,,Allows setting an individual MAVLink system id for this vehicle to distinguish it from others on the same network,1,1,MAV_PARAM_UNIT.UNKNOWN,"1,255",true,"SYSID_THISMAV(1,1,MAV_PARAM_UNIT.UNKNOWN,1,255,true,"""",""Allows setting an individual MAVLink system id for this vehicle to distinguish it from others on the same network""),"
TELEM_DELAY,0,,seconds,0 30,FALSE,,The amount of time (in seconds) to delay radio telemetry to prevent an Xbee bricking on power up,0,1,MAV_PARAM_UNIT.seconds,"0,30",true,"TELEM_DELAY(0,1,MAV_PARAM_UNIT.seconds,0,30,true,"""",""The amount of time (in seconds) to delay radio telemetry to prevent an Xbee bricking on power up""),"
THR_ACCEL_D,0,,,,FALSE,,Coming soon,0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"THR_ACCEL_D(0,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
THR_ACCEL_I,1,,,,FALSE,,Coming soon,1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"THR_ACCEL_I(1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
THR_ACCEL_IMAX,800,,,,FALSE,,Coming soon,800,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"THR_ACCEL_IMAX(800,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
THR_ACCEL_P,0.5,,,,FALSE,,Coming soon,0.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"THR_ACCEL_P(0.5,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
THR_ALT_P,1,,,,FALSE,,Coming soon,1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"THR_ALT_P(1,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
THR_DZ,100,,PWM,0 300,FALSE,,"The deadzone above and below mid throttle. Used in AltHold, Loiter, PosHold flight modes",100,1,MAV_PARAM_UNIT.PWM,"0,300",true,"THR_DZ(100,1,MAV_PARAM_UNIT.PWM,0,300,true,"""",""The deadzone above and below mid throttle. Used in AltHold, Loiter, PosHold flight modes""),"
THR_MAX,1000,,,,FALSE,,Coming soon,1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"THR_MAX(1000,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
THR_MID,510,,,,FALSE,,Coming soon,510,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"THR_MID(510,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
THR_MIN,130,,,,FALSE,,Coming soon,130,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"THR_MIN(130,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
THR_RATE_P,6,,,,FALSE,,Coming soon,6,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"THR_RATE_P(6,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
TRIM_THROTTLE,724,,,,FALSE,,Coming soon,724,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"TRIM_THROTTLE(724,1,MAV_PARAM_UNIT.UNKNOWN,null,true,"""",""Coming soon""),"
TUNE,1,,List,0:None 1:Stab_Roll/Pitch_kP 4:Rate_Roll/Pitch_kP 5:Rate_Roll/Pitch_kI 21:Rate_Roll/Pitch_kD 3:Stab_Yaw_kP 6:Rate_Yaw_kP 26:Rate_Yaw_kD 14:Altitude_Hold_kP 7:Throttle_Rate_kP 34:Throttle_Accel_kP 35:Throttle_Accel_kI 36:Throttle_Accel_kD 42:Loiter_Speed 12:Loiter_Pos_kP 22:Velocity_XY_kP 28:Velocity_XY_kI 10:WP_Speed 25:Acro_RollPitch_kP 40:Acro_Yaw_kP 13:Heli_Ext_Gyro 17:OF_Loiter_kP 18:OF_Loiter_kI 19:OF_Loiter_kD 38:Declination 39:Circle_Rate 41:RangeFinder_Gain 46:Rate_Pitch_kP 47:Rate_Pitch_kI 48:Rate_Pitch_kD 49:Rate_Roll_kP 50:Rate_Roll_kI 51:Rate_Roll_kD 52:Rate_Pitch_FF 53:Rate_Roll_FF 54:Rate_Yaw_FF,FALSE,,Controls which parameters (normally PID gains) are being tuned with transmitter's channel 6 knob,1,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""None"");put(1,""Stab_Roll/Pitch_kP"");put(4,""Rate_Roll/Pitch_kP"");put(5,""Rate_Roll/Pitch_kI"");put(21,""Rate_Roll/Pitch_kD"");put(3,""Stab_Yaw_kP"");put(6,""Rate_Yaw_kP"");put(26,""Rate_Yaw_kD"");put(14,""Altitude_Hold_kP"");put(7,""Throttle_Rate_kP"");put(34,""Throttle_Accel_kP"");put(35,""Throttle_Accel_kI"");put(36,""Throttle_Accel_kD"");put(42,""Loiter_Speed"");put(12,""Loiter_Pos_kP"");put(22,""Velocity_XY_kP"");put(28,""Velocity_XY_kI"");put(10,""WP_Speed"");put(25,""Acro_RollPitch_kP"");put(40,""Acro_Yaw_kP"");put(13,""Heli_Ext_Gyro"");put(17,""OF_Loiter_kP"");put(18,""OF_Loiter_kI"");put(19,""OF_Loiter_kD"");put(38,""Declination"");put(39,""Circle_Rate"");put(41,""RangeFinder_Gain"");put(46,""Rate_Pitch_kP"");put(47,""Rate_Pitch_kI"");put(48,""Rate_Pitch_kD"");put(49,""Rate_Roll_kP"");put(50,""Rate_Roll_kI"");put(51,""Rate_Roll_kD"");put(52,""Rate_Pitch_FF"");put(53,""Rate_Roll_FF"");put(54,""Rate_Yaw_FF"");}};",true,"TUNE(1,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""None"");put(1,""Stab_Roll/Pitch_kP"");put(4,""Rate_Roll/Pitch_kP"");put(5,""Rate_Roll/Pitch_kI"");put(21,""Rate_Roll/Pitch_kD"");put(3,""Stab_Yaw_kP"");put(6,""Rate_Yaw_kP"");put(26,""Rate_Yaw_kD"");put(14,""Altitude_Hold_kP"");put(7,""Throttle_Rate_kP"");put(34,""Throttle_Accel_kP"");put(35,""Throttle_Accel_kI"");put(36,""Throttle_Accel_kD"");put(42,""Loiter_Speed"");put(12,""Loiter_Pos_kP"");put(22,""Velocity_XY_kP"");put(28,""Velocity_XY_kI"");put(10,""WP_Speed"");put(25,""Acro_RollPitch_kP"");put(40,""Acro_Yaw_kP"");put(13,""Heli_Ext_Gyro"");put(17,""OF_Loiter_kP"");put(18,""OF_Loiter_kI"");put(19,""OF_Loiter_kD"");put(38,""Declination"");put(39,""Circle_Rate"");put(41,""RangeFinder_Gain"");put(46,""Rate_Pitch_kP"");put(47,""Rate_Pitch_kI"");put(48,""Rate_Pitch_kD"");put(49,""Rate_Roll_kP"");put(50,""Rate_Roll_kI"");put(51,""Rate_Roll_kD"");put(52,""Rate_Pitch_FF"");put(53,""Rate_Roll_FF"");put(54,""Rate_Yaw_FF"");}};,true,"""",""Controls which parameters (normally PID gains) are being tuned with transmitter's channel 6 knob""),"
TUNE_HIGH,32,,,0 32767,FALSE,,The maximum value that will be applied to the parameter currently being tuned with the transmitter's channel 6 knob,32,1,MAV_PARAM_UNIT.UNKNOWN,"0,32767",true,"TUNE_HIGH(32,1,MAV_PARAM_UNIT.UNKNOWN,0,32767,true,"""",""The maximum value that will be applied to the parameter currently being tuned with the transmitter's channel 6 knob""),"
TUNE_LOW,0,,,0 32767,FALSE,,The minimum value that will be applied to the parameter currently being tuned with the transmitter's channel 6 knob,0,1,MAV_PARAM_UNIT.UNKNOWN,"0,32767",true,"TUNE_LOW(0,1,MAV_PARAM_UNIT.UNKNOWN,0,32767,true,"""",""The minimum value that will be applied to the parameter currently being tuned with the transmitter's channel 6 knob""),"
WP_YAW_BEHAVIOR,2,,List,0:NeverChangeYaw 1:FaceNextWaypoint 2:FaceNextWaypointExceptRTL 3:FaceAlongGPScourse,FALSE,,Determines how the autopilot controls the yaw during missions and RTL,2,1,MAV_PARAM_UNIT.List,"new HashMap<Integer, String>(){{put(0,""NeverChangeYaw"");put(1,""FaceNextWaypoint"");put(2,""FaceNextWaypointExceptRTL"");put(3,""FaceAlongGPScourse"");}};",true,"WP_YAW_BEHAVIOR(2,1,MAV_PARAM_UNIT.List,new HashMap<Integer, String>(){{put(0,""NeverChangeYaw"");put(1,""FaceNextWaypoint"");put(2,""FaceNextWaypointExceptRTL"");put(3,""FaceAlongGPScourse"");}};,true,"""",""Determines how the autopilot controls the yaw during missions and RTL""),"
WPNAV_ACCEL,100,,cm/s/s,50 500,FALSE,,Defines the horizontal acceleration in cm/s/s used during missions,100,1,MAV_PARAM_UNIT.cm_s_s,"50,500",true,"WPNAV_ACCEL(100,1,MAV_PARAM_UNIT.cm_s_s,50,500,true,"""",""Defines the horizontal acceleration in cm/s/s used during missions""),"
WPNAV_ACCEL_Z,100,,cm/s/s,50 500,FALSE,,Defines the vertical acceleration in cm/s/s used during missions,100,1,MAV_PARAM_UNIT.cm_s_s,"50,500",true,"WPNAV_ACCEL_Z(100,1,MAV_PARAM_UNIT.cm_s_s,50,500,true,"""",""Defines the vertical acceleration in cm/s/s used during missions""),"
WPNAV_LOIT_JERK,1000,,cm/s/s/s,500 5000,FALSE,,Loiter maximum jerk in cm/s/s/s,1000,1,MAV_PARAM_UNIT.cm_s_s_s,"500,5000",true,"WPNAV_LOIT_JERK(1000,1,MAV_PARAM_UNIT.cm_s_s_s,500,5000,true,"""",""Loiter maximum jerk in cm/s/s/s""),"
WPNAV_LOIT_SPEED,1000,,cm/s,20 2000,FALSE,,Defines the maximum speed in cm/s which the aircraft will travel horizontally while in loiter mode,1000,1,MAV_PARAM_UNIT.cm_s,"20,2000",true,"WPNAV_LOIT_SPEED(1000,1,MAV_PARAM_UNIT.cm_s,20,2000,true,"""",""Defines the maximum speed in cm/s which the aircraft will travel horizontally while in loiter mode""),"
WPNAV_RADIUS,200,,cm,100 1000,FALSE,,"Defines the distance from a waypoint, that when crossed indicates the wp has been hit.",200,1,MAV_PARAM_UNIT.cm,"100,1000",true,"WPNAV_RADIUS(200,1,MAV_PARAM_UNIT.cm,100,1000,true,"""",""Defines the distance from a waypoint, that when crossed indicates the wp has been hit.""),"
WPNAV_SPEED,500,,cm/s,0 2000,FALSE,,Defines the speed in cm/s which the aircraft will attempt to maintain horizontally during a WP mission,500,1,MAV_PARAM_UNIT.cm_s,"0,2000",true,"WPNAV_SPEED(500,1,MAV_PARAM_UNIT.cm_s,0,2000,true,"""",""Defines the speed in cm/s which the aircraft will attempt to maintain horizontally during a WP mission""),"
WPNAV_SPEED_DN,150,,cm/s,10 500,FALSE,,Defines the speed in cm/s which the aircraft will attempt to maintain while descending during a WP mission,150,1,MAV_PARAM_UNIT.cm_s,"10,500",true,"WPNAV_SPEED_DN(150,1,MAV_PARAM_UNIT.cm_s,10,500,true,"""",""Defines the speed in cm/s which the aircraft will attempt to maintain while descending during a WP mission""),"
WPNAV_SPEED_UP,250,,cm/s,-328443,FALSE,,Defines the speed in cm/s which the aircraft will attempt to maintain while climbing during a WP mission,250,1,MAV_PARAM_UNIT.cm_s,-328443,true,"WPNAV_SPEED_UP(250,1,MAV_PARAM_UNIT.cm_s,-328443,true,"""",""Defines the speed in cm/s which the aircraft will attempt to maintain while climbing during a WP mission""),"
