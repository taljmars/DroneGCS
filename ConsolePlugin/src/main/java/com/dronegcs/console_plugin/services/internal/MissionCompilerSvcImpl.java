package com.dronegcs.console_plugin.services.internal;

import com.dronedb.persistence.scheme.Mission;
import com.dronegcs.console_plugin.mission_editor.MissionsManager;
import com.dronegcs.console_plugin.services.MissionCompilerSvc;
import com.dronegcs.console_plugin.services.internal.convertors.DatabaseToMavlinkItemConverter;
import com.dronegcs.console_plugin.services.internal.convertors.MavlinkItemToDatabaseConverter;
import com.dronegcs.mavlink.is.drone.Drone;
import com.dronegcs.mavlink.is.drone.mission.DroneMission;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Component;

import javax.annotation.PostConstruct;
import javax.validation.constraints.NotNull;

/**
 * Created by taljmars on 3/18/17.
 */
@Component
public class MissionCompilerSvcImpl implements MissionCompilerSvc
{
    @Autowired @NotNull(message = "Internal Error: Failed to get application context")
    private ApplicationContext aplApplicationContext;

    @Autowired @NotNull(message = "Internal Error: Failed to get drone")
    private Drone drone;

    @Autowired @NotNull(message = "Internal Error: Failed to get mission manager")
    private MissionsManager missionsManager;

    @PostConstruct
    private void init() {
        System.err.println("Mission Compiler started");
    }

    @Override
    public DroneMission compile(Mission mission) {
        DroneMission droneMission = new DroneMission();
        droneMission.setDrone(drone);
        droneMission.setDefaultAlt(mission.getDefaultAlt());

        DatabaseToMavlinkItemConverter databaseToMavlinkItemConverter = aplApplicationContext.getBean(DatabaseToMavlinkItemConverter.class);
        return databaseToMavlinkItemConverter.convert(mission, droneMission);
    }

    @Override
    public Mission decompile(DroneMission droneMission) {
        Mission mission = new Mission();
        mission.setDefaultAlt(droneMission.getDefaultAlt());
        mission.setName("AutoGenerated_Name_" + System.currentTimeMillis());

        MavlinkItemToDatabaseConverter mavlinkItemToDatabaseConverter = aplApplicationContext.getBean(MavlinkItemToDatabaseConverter.class);
        return mavlinkItemToDatabaseConverter.convert(droneMission, mission);
    }
}
